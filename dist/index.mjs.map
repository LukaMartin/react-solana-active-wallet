{"version":3,"file":"index.mjs","sources":["../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/crypto.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/_md.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@noble/curves/esm/abstract/edwards.js","../node_modules/@noble/curves/esm/ed25519.js","../node_modules/bn.js/lib/bn.js","../node_modules/safe-buffer/index.js","../node_modules/@solana/web3.js/node_modules/base-x/src/index.js","../node_modules/@solana/web3.js/node_modules/bs58/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/borsh/node_modules/base-x/src/index.js","../node_modules/borsh/node_modules/bs58/index.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/borsh/lib/index.js","../node_modules/@solana/buffer-layout/lib/Layout.js","../node_modules/bigint-buffer/dist/node.js","../node_modules/bindings/bindings.js","../node_modules/file-uri-to-path/index.js","../node_modules/superstruct/dist/index.mjs","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/webidl-conversions/lib/index.js","../node_modules/whatwg-url/lib/utils.js","../node_modules/tr46/index.js","../node_modules/whatwg-url/lib/url-state-machine.js","../node_modules/whatwg-url/lib/URL-impl.js","../node_modules/whatwg-url/lib/URL.js","../node_modules/whatwg-url/lib/public-api.js","../node_modules/node-fetch/lib/index.mjs","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@noble/curves/esm/secp256k1.js","../node_modules/@solana/web3.js/lib/index.esm.js","../src/hooks/useSolanaActiveWallet.ts"],"sourcesContent":["function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/**\n * Polyfill for Safari 14\n */\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(`${title} must be valid boolean, got \"${value}\".`);\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error(`expected valid ${title}: ${min} <= n < ${max}, got ${typeof n} ${n}`);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n// Inverses number over modulo\nexport function invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexport function FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\nexport function FpLegendre(order) {\n    // (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n    // (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n    return (f, x) => f.pow(x, legendreConst);\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendre = FpLegendre(f.ORDER);\n    return (x) => {\n        const p = legendre(f, x);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * NOTE: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { validateField, nLength } from './modular.js';\nimport { validateObject, bitLen } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap(); // This allows use make points immutable (nothing changes inside)\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const validateW = (W) => {\n        if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n            throw new Error(`Wrong window size=${W}, should be [1..${bits}]`);\n    };\n    const opts = (W) => {\n        validateW(W);\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, n, transform) {\n            const W = pointWindowSizes.get(P) || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1)\n                    pointPrecomputes.set(P, transform(comp));\n            }\n            return this.wNAF(W, comp, n);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM).\n * MSM is basically (Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster with precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param field field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger(c, field, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    if (!Array.isArray(points) || !Array.isArray(scalars) || scalars.length !== points.length)\n        throw new Error('arrays of points and scalars must have equal length');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error(`wrong scalar at index ${i}`);\n    });\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error(`wrong point at index ${i}`);\n    });\n    const wbits = bitLen(BigInt(points.length));\n    const windowSize = wbits > 12 ? wbits - 3 : wbits > 4 ? wbits - 2 : wbits ? 2 : 1; // in bits\n    const MASK = (1 << windowSize) - 1;\n    const buckets = new Array(MASK + 1).fill(c.ZERO); // +1 for zero array\n    const lastBits = Math.floor((field.BITS - 1) / windowSize) * windowSize;\n    let sum = c.ZERO;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(c.ZERO);\n        for (let j = 0; j < scalars.length; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & BigInt(MASK));\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = c.ZERO; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = c.ZERO; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nimport { validateBasic, wNAF, pippenger, } from './curve.js';\nimport { mod, Field } from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, memoized, abool } from './utils.js';\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n/**\n * Creates Twisted Edwards curve with EdDSA signatures.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, d, p, n, Gx, Gy, h\n * const curve = twistedEdwards({ a, d, Fp: Field(p), n, Gx, Gy, h })\n */\nexport function twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    const Fn = Field(CURVE.n, CURVE.nBitLength);\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            abool('phflag', phflag);\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    // 0 <= n < MASK\n    // Coordinates larger than Fp.ORDER are allowed for zip215\n    function aCoordinate(title, n) {\n        ut.aInRange('coordinate ' + title, n, _0n, MASK);\n    }\n    function assertPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    const toAffineMemo = memoized((p, iz) => {\n        const { ex: x, ey: y, ez: z } = p;\n        const is0 = p.is0();\n        if (iz == null)\n            iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n        const ax = modP(x * iz);\n        const ay = modP(y * iz);\n        const zz = modP(z * iz);\n        if (is0)\n            return { x: _0n, y: _1n };\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    const assertValidMemo = memoized((p) => {\n        const { a, d } = CURVE;\n        if (p.is0())\n            throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n        // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n        // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n        const { ex: X, ey: Y, ez: Z, et: T } = p;\n        const X2 = modP(X * X); // X²\n        const Y2 = modP(Y * Y); // Y²\n        const Z2 = modP(Z * Z); // Z²\n        const Z4 = modP(Z2 * Z2); // Z⁴\n        const aX2 = modP(X2 * a); // aX²\n        const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n        const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n        if (left !== right)\n            throw new Error('bad point: equation left != right (1)');\n        // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n        const XY = modP(X * Y);\n        const ZT = modP(Z * T);\n        if (XY !== ZT)\n            throw new Error('bad point: equation left != right (2)');\n        return true;\n    });\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            aCoordinate('x', ex);\n            aCoordinate('y', ey);\n            aCoordinate('z', ez);\n            aCoordinate('t', et);\n            Object.freeze(this);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            aCoordinate('x', x);\n            aCoordinate('y', y);\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        // Compare one point to another.\n        equals(other) {\n            assertPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            assertPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const n = scalar;\n            ut.aInRange('scalar', n, _1n, CURVE_ORDER); // 1 <= scalar < L\n            const { p, f } = this.wNAF(n);\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            const n = scalar;\n            ut.aInRange('scalar', n, _0n, CURVE_ORDER); // 0 <= scalar < L\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n            abool('zip215', zip215);\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            // RFC8032 prohibits >= p, but ZIP215 doesn't\n            // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n            // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n            const max = zip215 ? MASK : Fp.ORDER;\n            ut.aInRange('pointHex.y', y, _0n, max);\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = wNAF(Point, nByteLength * 8);\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = ensureBytes('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = ensureBytes('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        ut.aInRange('signature.s', s, _0n, CURVE_ORDER); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return ensureBytes('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = ensureBytes('message', msg);\n        if (zip215 !== undefined)\n            abool('zip215', zip215);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\n//# sourceMappingURL=edwards.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { twistedEdwards } from './abstract/edwards.js';\nimport { createHasher, expand_message_xmd } from './abstract/hash-to-curve.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { montgomery } from './abstract/montgomery.js';\nimport { bytesToHex, bytesToNumberLE, ensureBytes, equalBytes, numberToBytesLE, } from './abstract/utils.js';\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\nfunction ed25519_pow_2_252_3(x) {\n    // prettier-ignore\n    const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n    const b10 = (pow2(b5, _5n, P) * b5) % P;\n    const b20 = (pow2(b10, _10n, P) * b10) % P;\n    const b40 = (pow2(b20, _20n, P) * b20) % P;\n    const b80 = (pow2(b40, _40n, P) * b40) % P;\n    const b160 = (pow2(b80, _80n, P) * b80) % P;\n    const b240 = (pow2(b160, _80n, P) * b80) % P;\n    const b250 = (pow2(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = mod(v * v * v, P); // v³\n    const v7 = mod(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = mod(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if (isNegativeLE(x, P))\n        x = mod(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexport const ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = /* @__PURE__ */ (() => Field(ED25519_P, undefined, true))();\nconst ed25519Defaults = /* @__PURE__ */ (() => ({\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: _8n,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n}))();\n/**\n * ed25519 curve with EdDSA signatures.\n */\nexport const ed25519 = /* @__PURE__ */ (() => twistedEdwards(ed25519Defaults))();\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return concatBytes(utf8ToBytes('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexport const ed25519ctx = /* @__PURE__ */ (() => twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n}))();\nexport const ed25519ph = /* @__PURE__ */ (() => twistedEdwards(Object.assign({}, ed25519Defaults, {\n    domain: ed25519_domain,\n    prehash: sha512,\n})))();\nexport const x25519 = /* @__PURE__ */ (() => montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = /* @__PURE__ */ (() => (Fp.ORDER + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    const ELL2_C4 = (Fp.ORDER - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n    const ELL2_J = BigInt(486662);\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => createHasher(ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = /* @__PURE__ */ BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!isNegativeLE(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = ensureBytes('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = ensureBytes('ristrettoHex', hex, 32);\n        const { a, d } = ed25519.CURVE;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if (isNegativeLE(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || isNegativeLE(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = ed25519.CURVE.Fp.ORDER;\n        const mod = ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if (isNegativeLE(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if (isNegativeLE(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if (isNegativeLE(s, P))\n            s = mod(-s);\n        return numberToBytesLE(s, 32); // 11\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n    double() {\n        return new RistPoint(this.ep.double());\n    }\n    negate() {\n        return new RistPoint(this.ep.negate());\n    }\n}\nexport const RistrettoPoint = /* @__PURE__ */ (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n    const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexport const hash_to_ristretto255 = hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (psz < source.length) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/**\n * SHA2-224 hash function\n */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (psz < source.length) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n{\n    try {\n        converter = require('bindings')('bigint_buffer');\n    }\n    catch (e) {\n        console.warn('bigint: Failed to load bindings, pure JS will be used (try npm run rebuild?)');\n    }\n}\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    if (converter === undefined) {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    if (converter === undefined) {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    if (converter === undefined) {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    if (converter === undefined) {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","/**\n * Module dependencies.\n */\n\nvar fs = require('fs'),\n  path = require('path'),\n  fileURLToPath = require('file-uri-to-path'),\n  join = path.join,\n  dirname = path.dirname,\n  exists =\n    (fs.accessSync &&\n      function(path) {\n        try {\n          fs.accessSync(path);\n        } catch (e) {\n          return false;\n        }\n        return true;\n      }) ||\n    fs.existsSync ||\n    path.existsSync,\n  defaults = {\n    arrow: process.env.NODE_BINDINGS_ARROW || ' → ',\n    compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',\n    platform: process.platform,\n    arch: process.arch,\n    nodePreGyp:\n      'node-v' +\n      process.versions.modules +\n      '-' +\n      process.platform +\n      '-' +\n      process.arch,\n    version: process.versions.node,\n    bindings: 'bindings.node',\n    try: [\n      // node-gyp's linked version in the \"build\" dir\n      ['module_root', 'build', 'bindings'],\n      // node-waf and gyp_addon (a.k.a node-gyp)\n      ['module_root', 'build', 'Debug', 'bindings'],\n      ['module_root', 'build', 'Release', 'bindings'],\n      // Debug files, for development (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Debug', 'bindings'],\n      ['module_root', 'Debug', 'bindings'],\n      // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Release', 'bindings'],\n      ['module_root', 'Release', 'bindings'],\n      // Legacy from node-waf, node <= 0.4.x\n      ['module_root', 'build', 'default', 'bindings'],\n      // Production \"Release\" buildtype binary (meh...)\n      ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'],\n      // node-qbs builds\n      ['module_root', 'addon-build', 'release', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'default', 'install-root', 'bindings'],\n      // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}\n      ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']\n    ]\n  };\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings(opts) {\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts };\n  } else if (!opts) {\n    opts = {};\n  }\n\n  // maps `defaults` onto `opts` object\n  Object.keys(defaults).map(function(i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  });\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName());\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node';\n  }\n\n  // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035\n  var requireFunc =\n    typeof __webpack_require__ === 'function'\n      ? __non_webpack_require__\n      : require;\n\n  var tries = [],\n    i = 0,\n    l = opts.try.length,\n    n,\n    b,\n    err;\n\n  for (; i < l; i++) {\n    n = join.apply(\n      null,\n      opts.try[i].map(function(p) {\n        return opts[p] || p;\n      })\n    );\n    tries.push(n);\n    try {\n      b = opts.path ? requireFunc.resolve(n) : requireFunc(n);\n      if (!opts.path) {\n        b.path = n;\n      }\n      return b;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND' &&\n          e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' &&\n          !/not find/i.test(e.message)) {\n        throw e;\n      }\n    }\n  }\n\n  err = new Error(\n    'Could not locate the bindings file. Tried:\\n' +\n      tries\n        .map(function(a) {\n          return opts.arrow + a;\n        })\n        .join('\\n')\n  );\n  err.tries = tries;\n  throw err;\n}\nmodule.exports = exports = bindings;\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName(calling_file) {\n  var origPST = Error.prepareStackTrace,\n    origSTL = Error.stackTraceLimit,\n    dummy = {},\n    fileName;\n\n  Error.stackTraceLimit = 10;\n\n  Error.prepareStackTrace = function(e, st) {\n    for (var i = 0, l = st.length; i < l; i++) {\n      fileName = st[i].getFileName();\n      if (fileName !== __filename) {\n        if (calling_file) {\n          if (fileName !== calling_file) {\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    }\n  };\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy);\n  dummy.stack;\n\n  // cleanup\n  Error.prepareStackTrace = origPST;\n  Error.stackTraceLimit = origSTL;\n\n  // handle filename that starts with \"file://\"\n  var fileSchema = 'file://';\n  if (fileName.indexOf(fileSchema) === 0) {\n    fileName = fileURLToPath(fileName);\n  }\n\n  return fileName;\n};\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot(file) {\n  var dir = dirname(file),\n    prev;\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd();\n    }\n    if (\n      exists(join(dir, 'package.json')) ||\n      exists(join(dir, 'node_modules'))\n    ) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir;\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error(\n        'Could not find module root given file: \"' +\n          file +\n          '\". Do you have a `package.json` file? '\n      );\n    }\n    // Try the parent dir next\n    prev = dir;\n    dir = join(dir, '..');\n  }\n};\n","\n/**\n * Module dependencies.\n */\n\nvar sep = require('path').sep || '/';\n\n/**\n * Module exports.\n */\n\nmodule.exports = fileUriToPath;\n\n/**\n * File URI to Path function.\n *\n * @param {String} uri\n * @return {String} path\n * @api public\n */\n\nfunction fileUriToPath (uri) {\n  if ('string' != typeof uri ||\n      uri.length <= 7 ||\n      'file://' != uri.substring(0, 7)) {\n    throw new TypeError('must pass in a file:// URI to convert to a file path');\n  }\n\n  var rest = decodeURI(uri.substring(7));\n  var firstSlash = rest.indexOf('/');\n  var host = rest.substring(0, firstSlash);\n  var path = rest.substring(firstSlash + 1);\n\n  // 2.  Scheme Definition\n  // As a special case, <host> can be the string \"localhost\" or the empty\n  // string; this is interpreted as \"the machine from which the URL is\n  // being interpreted\".\n  if ('localhost' == host) host = '';\n\n  if (host) {\n    host = sep + sep + host;\n  }\n\n  // 3.2  Drives, drive letters, mount points, file system root\n  // Drive letters are mapped into the top of a file URI in various ways,\n  // depending on the implementation; some applications substitute\n  // vertical bar (\"|\") for the colon after the drive letter, yielding\n  // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n  // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n  // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n  path = path.replace(/^(.+)\\|/, '$1:');\n\n  // for Windows, we need to invert the path separators from what a URI uses\n  if (sep == '\\\\') {\n    path = path.replace(/\\//g, '\\\\');\n  }\n\n  if (/^.+\\:/.test(path)) {\n    // has Windows drive at beginning of path\n  } else {\n    // unix path…\n    path = sep + path;\n  }\n\n  return host + path;\n}\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a non-array object.\n */\nfunction isNonArrayObject(x) {\n    return isObject(x) && !Array.isArray(x);\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch, mask };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema. Masking applies recursively to\n     * props of `object` structs only.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `coerce` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful. Also, `mask` will turn on\n     * masking of the unknown `object` props recursively if passed.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const isStruct = struct instanceof Struct;\n    const schema = isStruct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    if (isStruct && struct.type === 'type') {\n        return type(schema);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value, ctx) {\n            if (!isNonArrayObject(value)) {\n                return value;\n            }\n            const coerced = { ...value };\n            // The `object` struct has special behaviour enabled by the mask flag.\n            // When masking, properties that are not in the schema are deleted from\n            // the coerced object instead of eventually failing validaiton.\n            if (ctx.mask && schema) {\n                for (const key in coerced) {\n                    if (schema[key] === undefined) {\n                        delete coerced[key];\n                    }\n                }\n            }\n            return coerced;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isNonArrayObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isNonArrayObject(value) ||\n                `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isNonArrayObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value, ctx) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, {\n                    coerce: true,\n                    mask: ctx.mask,\n                });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError, AbortError };\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport { validateBasic, wNAF, pippenger, } from './curve.js';\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { ensureBytes, memoized, abool } from './utils.js';\nfunction validateSigVerOpts(opts) {\n    if (opts.lowS !== undefined)\n        abool('lowS', opts.lowS);\n    if (opts.prehash !== undefined)\n        abool('prehash', opts.prehash);\n}\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: class DERErr extends Error {\n        constructor(m = '') {\n            super(m);\n        }\n    },\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = ut.numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? ut.numberToHexUnpadded((len.length / 2) | 128) : '';\n            return `${ut.numberToHexUnpadded(tag)}${lenLen}${len}${data}`;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = ut.numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected assertion');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('Invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('Invalid signature integer: unnecessary leading zero');\n            return b2n(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('Invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const seq = `${tlv.encode(0x02, int.encode(sig.r))}${tlv.encode(0x02, int.encode(sig.s))}`;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const Fn = mod.Field(CURVE.n, CURVE.nBitLength);\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return ut.inRange(num, _1n, CURVE.n);\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('Invalid key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n        }\n        if (wrapPrivateKey)\n            num = mod.mod(num, N); // disabled by default, enabled for BLS\n        ut.aInRange('private key', num, _1n, N); // num in range [1..N-1]\n        return num;\n    }\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { px: x, py: y, pz: z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(z, Fp.ONE))\n            return { x, y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(z);\n        const ax = Fp.mul(x, iz);\n        const ay = Fp.mul(y, iz);\n        const zz = Fp.mul(z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n            if (CURVE.allowInfinityPoint && !Fp.is0(p.py))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        // Check if x, y are valid field elements\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not FE');\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        if (!Fp.eql(left, right))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n            Object.freeze(this);\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            ut.aInRange('scalar', sc, _0n, CURVE.n);\n            const I = Point.ZERO;\n            if (sc === _0n)\n                return I;\n            if (sc === _1n)\n                return this;\n            const { endo } = CURVE;\n            if (!endo)\n                return wnaf.unsafeLadder(this, sc);\n            // Apply endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', scalar, _1n, N);\n            let point, fake; // Fake point is used to const-time mult\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function modN(a) {\n        return mod.mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return mod.invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            abool('isCompressed', isCompressed);\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!ut.inRange(x, _1n, Fp.ORDER))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                throw new Error(`Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            ut.aInRange('r', this.r, _1n, CURVE_ORDER); // r in [1..N]\n            ut.aInRange('s', this.s, _1n, CURVE_ORDER); // s in [1..N]\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = mod.getMinHashLength(CURVE.n);\n            return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        ut.aInRange(`num < 2^${CURVE.nBitLength}`, num, _0n, ORDER_MASK);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n    // Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        validateSigVerOpts(opts);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        validateSigVerOpts(opts);\n        const { lowS, prehash } = opts;\n        let _sig = undefined;\n        let P;\n        try {\n            if (typeof sg === 'string' || ut.isBytes(sg)) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                    _sig = Signature.fromCompact(sg);\n                }\n            }\n            else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n                const { r, s } = sg;\n                _sig = new Signature(r, s);\n            }\n            else {\n                throw new Error('PARSE');\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            if (error.message === 'PARSE')\n                throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n            return false;\n        }\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    mod.validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n// connects noble-curves to noble-hashes\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return Object.freeze({ ...create(defHash), create });\n}\n//# sourceMappingURL=_shortw_utils.js.map","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { inRange, aInRange, bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE, } from './abstract/utils.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1P;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fp.eql(Fp.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n/**\n * secp256k1 short weierstrass curve and ECDSA signatures over it.\n */\nexport const secp256k1 = createCurve({\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1N;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1P);\nconst modN = (x) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q, a, b) => Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = p.hasEvenY() ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    aInRange('x', x, _1n, secp256k1P); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (y % _2n !== _0n)\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!inRange(r, _1n, secp256k1P))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!inRange(s, _1n, secp256k1N))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n        if (!R || !R.hasEvenY() || R.toAffine().x !== r)\n            return false; // -eP == (n-e)P\n        return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n */\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fp, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256k1.ProjectivePoint, (scalars) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","import { Buffer } from 'buffer';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport BN from 'bn.js';\nimport bs58 from 'bs58';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { serialize, deserialize, deserializeUnchecked } from 'borsh';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport { blob } from '@solana/buffer-layout';\nimport { toBigIntLE, toBufferLE } from 'bigint-buffer';\nimport require$$0 from 'util';\nimport require$$0$1 from 'http';\nimport require$$0$2, { Agent as Agent$1 } from 'https';\nimport { coerce, instance, string, tuple, literal, unknown, type, number, array, nullable, optional, boolean, record, union, create, any, assert as assert$1 } from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport * as nodeFetch from 'node-fetch';\nimport { CommonClient, WebSocket } from 'rpc-websockets';\nimport { keccak_256 } from '@noble/hashes/sha3';\nimport { secp256k1 } from '@noble/curves/secp256k1';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\n\n/**\n * Ed25519 Keypair\n */\n\nconst generatePrivateKey = ed25519.utils.randomPrivateKey;\nconst generateKeypair = () => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey\n  };\n};\nconst getPublicKey = ed25519.getPublicKey;\nfunction isOnCurve(publicKey) {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst sign = (message, secretKey) => ed25519.sign(message, secretKey.slice(0, 32));\nconst verify = ed25519.verify;\n\nconst toBuffer = arr => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n\n// Class wrapping a plain object\nclass Struct {\n  constructor(properties) {\n    Object.assign(this, properties);\n  }\n  encode() {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n  static decode(data) {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n  static decodeUnchecked(data) {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nclass Enum extends Struct {\n  constructor(properties) {\n    super(properties);\n    this.enum = '';\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\nconst SOLANA_SCHEMA = new Map();\n\nvar _PublicKey;\n\n/**\n * Maximum length of derived pubkey seed\n */\nconst MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\n\n/**\n * JSON object representation of PublicKey class\n */\n\nfunction isPublicKeyData(value) {\n  return value._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nclass PublicKey extends Struct {\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value) {\n    super({});\n    /** @internal */\n    this._bn = void 0;\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique() {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey) {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58() {\n    return bs58.encode(this.toBytes());\n  }\n  toJSON() {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes() {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer() {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n  get [Symbol.toStringTag]() {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString() {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(fromPublicKey, seed, programId) {\n    const buffer = Buffer.concat([fromPublicKey.toBuffer(), Buffer.from(seed), programId.toBuffer()]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(seeds, programId) {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([buffer, programId.toBuffer(), Buffer.from('ProgramDerivedAddress')]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(seeds, programId) {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(seeds, programId) {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(seeds, programId) {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData) {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n_PublicKey = PublicKey;\nPublicKey.default = new _PublicKey('11111111111111111111111111111111');\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']]\n});\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nclass Account {\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey) {\n    /** @internal */\n    this._publicKey = void 0;\n    /** @internal */\n    this._secretKey = void 0;\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey() {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey() {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n\nconst BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey('BPFLoader1111111111111111111111111111111111');\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nconst PACKET_DATA_SIZE = 1280 - 40 - 8;\nconst VERSION_PREFIX_MASK = 0x7f;\nconst SIGNATURE_LENGTH_IN_BYTES = 64;\n\nclass TransactionExpiredBlockheightExceededError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredBlockheightExceededError.prototype, 'name', {\n  value: 'TransactionExpiredBlockheightExceededError'\n});\nclass TransactionExpiredTimeoutError extends Error {\n  constructor(signature, timeoutSeconds) {\n    super(`Transaction was not confirmed in ${timeoutSeconds.toFixed(2)} seconds. It is ` + 'unknown if it succeeded or failed. Check signature ' + `${signature} using the Solana Explorer or CLI tools.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError'\n});\nclass TransactionExpiredNonceInvalidError extends Error {\n  constructor(signature) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = void 0;\n    this.signature = signature;\n  }\n}\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError'\n});\n\nclass MessageAccountKeys {\n  constructor(staticAccountKeys, accountKeysFromLookups) {\n    this.staticAccountKeys = void 0;\n    this.accountKeysFromLookups = void 0;\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n  keySegments() {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n  get(index) {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n  get length() {\n    return this.keySegments().flat().length;\n  }\n  compileInstructions(instructions) {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n    const keyIndexMap = new Map();\n    this.keySegments().flat().forEach((key, index) => {\n      keyIndexMap.set(key.toBase58(), index);\n    });\n    const findKeyIndex = key => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined) throw new Error('Encountered an unknown instruction account key during compilation');\n      return keyIndex;\n    };\n    return instructions.map(instruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta => findKeyIndex(meta.pubkey)),\n        data: instruction.data\n      };\n    });\n  }\n}\n\n/**\n * Layout for a public key\n */\nconst publicKey = (property = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nconst signature = (property = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n/**\n * Layout for a Rust String type\n */\nconst rustString = (property = 'string') => {\n  const rsl = BufferLayout.struct([BufferLayout.u32('length'), BufferLayout.u32('lengthPadding'), BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars')], property);\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n  const rslShim = rsl;\n  rslShim.decode = (b, offset) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n  rslShim.encode = (str, b, offset) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8')\n    };\n    return _encode(data, b, offset);\n  };\n  rslShim.alloc = str => {\n    return BufferLayout.u32().span + BufferLayout.u32().span + Buffer.from(str, 'utf8').length;\n  };\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nconst authorized = (property = 'authorized') => {\n  return BufferLayout.struct([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nconst lockup = (property = 'lockup') => {\n  return BufferLayout.struct([BufferLayout.ns64('unixTimestamp'), BufferLayout.ns64('epoch'), publicKey('custodian')], property);\n};\n\n/**\n *  Layout for a VoteInit object\n */\nconst voteInit = (property = 'voteInit') => {\n  return BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedVoter'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission')], property);\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nconst voteAuthorizeWithSeedArgs = (property = 'voteAuthorizeWithSeedArgs') => {\n  return BufferLayout.struct([BufferLayout.u32('voteAuthorizationType'), publicKey('currentAuthorityDerivedKeyOwnerPubkey'), rustString('currentAuthorityDerivedKeySeed'), publicKey('newAuthorized')], property);\n};\nfunction getAlloc(type, fields) {\n  const getItemAlloc = item => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({\n        layout: item\n      }, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n  let alloc = 0;\n  type.layout.fields.forEach(item => {\n    alloc += getItemAlloc(item);\n  });\n  return alloc;\n}\n\nfunction decodeLength(bytes) {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift();\n    len |= (elem & 0x7f) << size * 7;\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\nfunction encodeLength(bytes, len) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\nclass CompiledKeys {\n  constructor(payer, keyMetaMap) {\n    this.payer = void 0;\n    this.keyMetaMap = void 0;\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n  static compile(instructions, payer) {\n    const keyMetaMap = new Map();\n    const getOrInsertDefault = pubkey => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n  getMessageComponents() {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n    const writableSigners = mapEntries.filter(([, meta]) => meta.isSigner && meta.isWritable);\n    const readonlySigners = mapEntries.filter(([, meta]) => meta.isSigner && !meta.isWritable);\n    const writableNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && meta.isWritable);\n    const readonlyNonSigners = mapEntries.filter(([, meta]) => !meta.isSigner && !meta.isWritable);\n    const header = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length\n    };\n\n    // sanity checks\n    {\n      assert(writableSigners.length > 0, 'Expected at least one writable signer key');\n      const [payerAddress] = writableSigners[0];\n      assert(payerAddress === this.payer.toBase58(), 'Expected first writable signer key to be the fee payer');\n    }\n    const staticAccountKeys = [...writableSigners.map(([address]) => new PublicKey(address)), ...readonlySigners.map(([address]) => new PublicKey(address)), ...writableNonSigners.map(([address]) => new PublicKey(address)), ...readonlyNonSigners.map(([address]) => new PublicKey(address))];\n    return [header, staticAccountKeys];\n  }\n  extractTableLookup(lookupTable) {\n    const [writableIndexes, drainedWritableKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable);\n    const [readonlyIndexes, drainedReadonlyKeys] = this.drainKeysFoundInLookupTable(lookupTable.state.addresses, keyMeta => !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable);\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n    return [{\n      accountKey: lookupTable.key,\n      writableIndexes,\n      readonlyIndexes\n    }, {\n      writable: drainedWritableKeys,\n      readonly: drainedReadonlyKeys\n    }];\n  }\n\n  /** @internal */\n  drainKeysFoundInLookupTable(lookupTableEntries, keyMetaFilter) {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry => entry.equals(key));\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n\nconst END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nfunction guardedShift(byteArray) {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift();\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nfunction guardedSplice(byteArray, ...args) {\n  const [start] = args;\n  if (args.length === 2 // Implies that `deleteCount` was supplied\n  ? start + (args[1] ?? 0) > byteArray.length : start >= byteArray.length) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(...args);\n}\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\n\n/**\n * Message constructor arguments\n */\n\n/**\n * List of instructions to be processed atomically\n */\nclass Message {\n  constructor(args) {\n    this.header = void 0;\n    this.accountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.instructions = void 0;\n    this.indexToProgramIds = new Map();\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix => this.indexToProgramIds.set(ix.programIdIndex, this.accountKeys[ix.programIdIndex]));\n  }\n  get version() {\n    return 'legacy';\n  }\n  get staticAccountKeys() {\n    return this.accountKeys;\n  }\n  get compiledInstructions() {\n    return this.instructions.map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accountKeyIndexes: ix.accounts,\n      data: bs58.decode(ix.data)\n    }));\n  }\n  get addressTableLookups() {\n    return [];\n  }\n  getAccountKeys() {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(ix => ({\n      programIdIndex: ix.programIdIndex,\n      accounts: ix.accountKeyIndexes,\n      data: bs58.encode(ix.data)\n    }));\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions\n    });\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  isProgramId(index) {\n    return this.indexToProgramIds.has(index);\n  }\n  programIds() {\n    return [...this.indexToProgramIds.values()];\n  }\n  nonProgramIds() {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n  serialize() {\n    const numKeys = this.accountKeys.length;\n    let keyCount = [];\n    encodeLength(keyCount, numKeys);\n    const instructions = this.instructions.map(instruction => {\n      const {\n        accounts,\n        programIdIndex\n      } = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n      let keyIndicesCount = [];\n      encodeLength(keyIndicesCount, accounts.length);\n      let dataCount = [];\n      encodeLength(dataCount, data.length);\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data\n      };\n    });\n    let instructionCount = [];\n    encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(instruction.keyIndicesCount.length, 'keyIndicesCount'), BufferLayout.seq(BufferLayout.u8('keyIndex'), instruction.keyIndices.length, 'keyIndices'), BufferLayout.blob(instruction.dataLength.length, 'dataLength'), BufferLayout.seq(BufferLayout.u8('userdatum'), instruction.data.length, 'data')]);\n      const length = instructionLayout.encode(instruction, instructionBuffer, instructionBufferLength);\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n    const signDataLayout = BufferLayout.struct([BufferLayout.blob(1, 'numRequiredSignatures'), BufferLayout.blob(1, 'numReadonlySignedAccounts'), BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'), BufferLayout.blob(keyCount.length, 'keyCount'), BufferLayout.seq(publicKey('key'), numKeys, 'keys'), publicKey('recentBlockhash')]);\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([this.header.numReadonlySignedAccounts]),\n      numReadonlyUnsignedAccounts: Buffer.from([this.header.numReadonlyUnsignedAccounts]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash)\n    };\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (numRequiredSignatures !== (numRequiredSignatures & VERSION_PREFIX_MASK)) {\n      throw new Error('Versioned messages must be deserialized with VersionedMessage.deserialize()');\n    }\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n    const accountCount = decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n    const instructionCount = decodeLength(byteArray);\n    let instructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data\n      });\n    }\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions\n    };\n    return new Message(messageArgs);\n  }\n}\n\n/**\n * Message constructor arguments\n */\n\nclass MessageV0 {\n  constructor(args) {\n    this.header = void 0;\n    this.staticAccountKeys = void 0;\n    this.recentBlockhash = void 0;\n    this.compiledInstructions = void 0;\n    this.addressTableLookups = void 0;\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n  get version() {\n    return 0;\n  }\n  get numAccountKeysFromLookups() {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n  getAccountKeys(args) {\n    let accountKeysFromLookups;\n    if (args && 'accountKeysFromLookups' in args && args.accountKeysFromLookups) {\n      if (this.numAccountKeysFromLookups != args.accountKeysFromLookups.writable.length + args.accountKeysFromLookups.readonly.length) {\n        throw new Error('Failed to get account keys because of a mismatch in the number of account keys from lookups');\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (args && 'addressLookupTableAccounts' in args && args.addressLookupTableAccounts) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(args.addressLookupTableAccounts);\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error('Failed to get account keys because address table lookups were not resolved');\n    }\n    return new MessageAccountKeys(this.staticAccountKeys, accountKeysFromLookups);\n  }\n  isAccountSigner(index) {\n    return index < this.header.numRequiredSignatures;\n  }\n  isAccountWritable(index) {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce((count, lookup) => count + lookup.writableIndexes.length, 0);\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts = numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts = numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n  resolveAddressTableLookups(addressLookupTableAccounts) {\n    const accountKeysFromLookups = {\n      writable: [],\n      readonly: []\n    };\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account => account.key.equals(tableLookup.accountKey));\n      if (!tableAccount) {\n        throw new Error(`Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`);\n      }\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(tableAccount.state.addresses[index]);\n        } else {\n          throw new Error(`Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`);\n        }\n      }\n    }\n    return accountKeysFromLookups;\n  }\n  static compile(args) {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const addressTableLookups = new Array();\n    const accountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array()\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {\n          writable,\n          readonly\n        }] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys, accountKeysFromLookups);\n    const compiledInstructions = accountKeys.compileInstructions(args.instructions);\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n  serialize() {\n    const encodedStaticAccountKeysLength = Array();\n    encodeLength(encodedStaticAccountKeysLength, this.staticAccountKeys.length);\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array();\n    encodeLength(encodedInstructionsLength, this.compiledInstructions.length);\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array();\n    encodeLength(encodedAddressTableLookupsLength, this.addressTableLookups.length);\n    const messageLayout = BufferLayout.struct([BufferLayout.u8('prefix'), BufferLayout.struct([BufferLayout.u8('numRequiredSignatures'), BufferLayout.u8('numReadonlySignedAccounts'), BufferLayout.u8('numReadonlyUnsignedAccounts')], 'header'), BufferLayout.blob(encodedStaticAccountKeysLength.length, 'staticAccountKeysLength'), BufferLayout.seq(publicKey(), this.staticAccountKeys.length, 'staticAccountKeys'), publicKey('recentBlockhash'), BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'), BufferLayout.blob(serializedInstructions.length, 'serializedInstructions'), BufferLayout.blob(encodedAddressTableLookupsLength.length, 'addressTableLookupsLength'), BufferLayout.blob(serializedAddressTableLookups.length, 'serializedAddressTableLookups')]);\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode({\n      prefix: MESSAGE_VERSION_0_PREFIX,\n      header: this.header,\n      staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n      staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n      instructionsLength: new Uint8Array(encodedInstructionsLength),\n      serializedInstructions,\n      addressTableLookupsLength: new Uint8Array(encodedAddressTableLookupsLength),\n      serializedAddressTableLookups\n    }, serializedMessage);\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n  serializeInstructions() {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array();\n      encodeLength(encodedAccountKeyIndexesLength, instruction.accountKeyIndexes.length);\n      const encodedDataLength = Array();\n      encodeLength(encodedDataLength, instruction.data.length);\n      const instructionLayout = BufferLayout.struct([BufferLayout.u8('programIdIndex'), BufferLayout.blob(encodedAccountKeyIndexesLength.length, 'encodedAccountKeyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), instruction.accountKeyIndexes.length, 'accountKeyIndexes'), BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'), BufferLayout.blob(instruction.data.length, 'data')]);\n      serializedLength += instructionLayout.encode({\n        programIdIndex: instruction.programIdIndex,\n        encodedAccountKeyIndexesLength: new Uint8Array(encodedAccountKeyIndexesLength),\n        accountKeyIndexes: instruction.accountKeyIndexes,\n        encodedDataLength: new Uint8Array(encodedDataLength),\n        data: instruction.data\n      }, serializedInstructions, serializedLength);\n    }\n    return serializedInstructions.slice(0, serializedLength);\n  }\n  serializeAddressTableLookups() {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array();\n      encodeLength(encodedWritableIndexesLength, lookup.writableIndexes.length);\n      const encodedReadonlyIndexesLength = Array();\n      encodeLength(encodedReadonlyIndexesLength, lookup.readonlyIndexes.length);\n      const addressTableLookupLayout = BufferLayout.struct([publicKey('accountKey'), BufferLayout.blob(encodedWritableIndexesLength.length, 'encodedWritableIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.writableIndexes.length, 'writableIndexes'), BufferLayout.blob(encodedReadonlyIndexesLength.length, 'encodedReadonlyIndexesLength'), BufferLayout.seq(BufferLayout.u8(), lookup.readonlyIndexes.length, 'readonlyIndexes')]);\n      serializedLength += addressTableLookupLayout.encode({\n        accountKey: lookup.accountKey.toBytes(),\n        encodedWritableIndexesLength: new Uint8Array(encodedWritableIndexesLength),\n        writableIndexes: lookup.writableIndexes,\n        encodedReadonlyIndexesLength: new Uint8Array(encodedReadonlyIndexesLength),\n        readonlyIndexes: lookup.readonlyIndexes\n      }, serializedAddressTableLookups, serializedLength);\n    }\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n  static deserialize(serializedMessage) {\n    let byteArray = [...serializedMessage];\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(prefix !== maskedPrefix, `Expected versioned message but received legacy message`);\n    const version = maskedPrefix;\n    assert(version === 0, `Expected versioned message with version 0 but found version ${version}`);\n    const header = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray)\n    };\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)));\n    }\n    const recentBlockhash = bs58.encode(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n    const instructionCount = decodeLength(byteArray);\n    const compiledInstructions = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(byteArray, 0, accountKeyIndexesLength);\n      const dataLength = decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data\n      });\n    }\n    const addressTableLookupsCount = decodeLength(byteArray);\n    const addressTableLookups = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = decodeLength(byteArray);\n      const writableIndexes = guardedSplice(byteArray, 0, writableIndexesLength);\n      const readonlyIndexesLength = decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(byteArray, 0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes\n      });\n    }\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups\n    });\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nconst VersionedMessage = {\n  deserializeMessageVersion(serializedMessage) {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n  deserialize: serializedMessage => {\n    const version = VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(`Transaction message version ${version} deserialization is not supported`);\n    }\n  }\n};\n\n/** @internal */\n\n/**\n * Transaction signature as base-58 encoded string\n */\n\nlet TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[TransactionStatus[\"BLOCKHEIGHT_EXCEEDED\"] = 0] = \"BLOCKHEIGHT_EXCEEDED\";\n  TransactionStatus[TransactionStatus[\"PROCESSED\"] = 1] = \"PROCESSED\";\n  TransactionStatus[TransactionStatus[\"TIMED_OUT\"] = 2] = \"TIMED_OUT\";\n  TransactionStatus[TransactionStatus[\"NONCE_INVALID\"] = 3] = \"NONCE_INVALID\";\n  return TransactionStatus;\n}({});\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\n\n/**\n * Configuration object for Transaction.serialize()\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction Instruction class\n */\nclass TransactionInstruction {\n  constructor(opts) {\n    /**\n     * Public keys to include in this transaction\n     * Boolean represents whether this pubkey needs to sign the transaction\n     */\n    this.keys = void 0;\n    /**\n     * Program Id to execute\n     */\n    this.programId = void 0;\n    /**\n     * Program input\n     */\n    this.data = Buffer.alloc(0);\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      keys: this.keys.map(({\n        pubkey,\n        isSigner,\n        isWritable\n      }) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data]\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\n\n/**\n * @internal\n */\n\n/**\n * Transaction class\n */\nclass Transaction {\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature() {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n\n  // Construct a transaction using a durable nonce\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts) {\n    /**\n     * Signatures for the transaction.  Typically created by invoking the\n     * `sign()` method\n     */\n    this.signatures = [];\n    this.feePayer = void 0;\n    /**\n     * The instructions to atomically execute\n     */\n    this.instructions = [];\n    /**\n     * A recent transaction id. Must be populated by the caller\n     */\n    this.recentBlockhash = void 0;\n    /**\n     * the last block chain can advance to before tx is declared expired\n     * */\n    this.lastValidBlockHeight = void 0;\n    /**\n     * Optional Nonce information. If populated, transaction will use a durable\n     * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n     */\n    this.nonceInfo = void 0;\n    /**\n     * If this is a nonce transaction this represents the minimum slot from which\n     * to evaluate if the nonce has advanced when attempting to confirm the\n     * transaction. This protects against a case where the transaction confirmation\n     * logic loads the nonce account from an old slot and assumes the mismatch in\n     * nonce value implies that the nonce has been advanced.\n     */\n    this.minNonceContextSlot = void 0;\n    /**\n     * @internal\n     */\n    this._message = void 0;\n    /**\n     * @internal\n     */\n    this._json = void 0;\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {\n        minContextSlot,\n        nonceInfo\n      } = opts;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {\n        blockhash,\n        lastValidBlockHeight\n      } = opts;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {\n        recentBlockhash,\n        nonceInfo\n      } = opts;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON() {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo ? {\n        nonce: this.nonceInfo.nonce,\n        nonceInstruction: this.nonceInfo.nonceInstruction.toJSON()\n      } : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({\n        publicKey\n      }) => {\n        return publicKey.toJSON();\n      })\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(...items) {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n    items.forEach(item => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage() {\n    if (this._message && JSON.stringify(this.toJSON()) === JSON.stringify(this._json)) {\n      return this._message;\n    }\n    let recentBlockhash;\n    let instructions;\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n    let feePayer;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(`Transaction instruction index ${i} has undefined program id`);\n      }\n    }\n    const programIds = [];\n    const accountMetas = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({\n          ...accountMeta\n        });\n      });\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable = uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner = uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower'\n      };\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn('Transaction references a signature that is unnecessary, ' + 'only the fee payer and instruction signer accounts should sign a transaction. ' + 'This behavior is deprecated and will throw an error in the next major version release.');\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys = [];\n    const unsignedKeys = [];\n    uniqueMetas.forEach(({\n      pubkey,\n      isSigner,\n      isWritable\n    }) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions = instructions.map(instruction => {\n      const {\n        data,\n        programId\n      } = instruction;\n      return {\n        programIdIndex: accountKeys.indexOf(programId.toString()),\n        accounts: instruction.keys.map(meta => accountKeys.indexOf(meta.pubkey.toString())),\n        data: bs58.encode(data)\n      };\n    });\n    compiledInstructions.forEach(instruction => {\n      assert(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => assert(keyIndex >= 0));\n    });\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile() {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(0, message.header.numRequiredSignatures);\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n      if (valid) return message;\n    }\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage() {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection) {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n    const seen = new Set();\n    this.signatures = signers.filter(publicKey => {\n      const key = publicKey.toString();\n      if (seen.has(key)) {\n        return false;\n      } else {\n        seen.add(key);\n        return true;\n      }\n    }).map(publicKey => ({\n      signature: null,\n      publicKey\n    }));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey\n    }));\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message, ...signers) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey, signature) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey, signature) {\n    assert(signature.length === 64);\n    const index = this.signatures.findIndex(sigpair => pubkey.equals(sigpair.publicKey));\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures = true) {\n    const signatureErrors = this._getMessageSignednessErrors(this.serializeMessage(), requireAllSignatures);\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(message, requireAllSignatures) {\n    const errors = {};\n    for (const {\n      signature,\n      publicKey\n    } of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config) {\n    const {\n      requireAllSignatures,\n      verifySignatures\n    } = Object.assign({\n      requireAllSignatures: true,\n      verifySignatures: true\n    }, config);\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(signData, requireAllSignatures);\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${sigErrors.invalid.length === 1 ? '' : '(s)'} [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${sigErrors.missing.length === 1 ? '' : '(s)'} [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData) {\n    const {\n      signatures\n    } = this;\n    const signatureCount = [];\n    encodeLength(signatureCount, signatures.length);\n    const transactionLength = signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    assert(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({\n      signature\n    }, index) => {\n      if (signature !== null) {\n        assert(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(wireTransaction, signatureCount.length + index * 64);\n      }\n    });\n    signData.copy(wireTransaction, signatureCount.length + signatures.length * 64);\n    assert(wireTransaction.length <= PACKET_DATA_SIZE, `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`);\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data() {\n    assert(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer) {\n    // Slice up wire data\n    let byteArray = [...buffer];\n    const signatureCount = decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(message, signatures = []) {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature: signature == bs58.encode(DEFAULT_SIGNATURE) ? null : bs58.decode(signature),\n        publicKey: message.accountKeys[index]\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner: transaction.signatures.some(keyObj => keyObj.publicKey.toString() === pubkey.toString()) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account)\n        };\n      });\n      transaction.instructions.push(new TransactionInstruction({\n        keys,\n        programId: message.accountKeys[instruction.programIdIndex],\n        data: bs58.decode(instruction.data)\n      }));\n    });\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n    return transaction;\n  }\n}\n\nclass TransactionMessage {\n  constructor(args) {\n    this.payerKey = void 0;\n    this.instructions = void 0;\n    this.recentBlockhash = void 0;\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n  static decompile(message, args) {\n    const {\n      header,\n      compiledInstructions,\n      recentBlockhash\n    } = message;\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts\n    } = header;\n    const numWritableSignedAccounts = numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n    const numWritableUnsignedAccounts = message.staticAccountKeys.length - numRequiredSignatures - numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error('Failed to decompile message because no account keys were found');\n    }\n    const instructions = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys = [];\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(`Failed to find key for account key index ${keyIndex}`);\n        }\n        const isSigner = keyIndex < numRequiredSignatures;\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable = keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable = keyIndex - accountKeys.staticAccountKeys.length <\n          // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n          accountKeys.accountKeysFromLookups.writable.length;\n        }\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable\n        });\n      }\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(`Failed to find program id for program id index ${compiledIx.programIdIndex}`);\n      }\n      instructions.push(new TransactionInstruction({\n        programId,\n        data: toBuffer(compiledIx.data),\n        keys\n      }));\n    }\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash\n    });\n  }\n  compileToLegacyMessage() {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions\n    });\n  }\n  compileToV0Message(addressLookupTableAccounts) {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts\n    });\n  }\n}\n\n/**\n * Versioned transaction class\n */\nclass VersionedTransaction {\n  get version() {\n    return this.message.version;\n  }\n  constructor(message, signatures) {\n    this.signatures = void 0;\n    this.message = void 0;\n    if (signatures !== undefined) {\n      assert(signatures.length === message.header.numRequiredSignatures, 'Expected signatures length to be equal to the number of required signatures');\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n  serialize() {\n    const serializedMessage = this.message.serialize();\n    const encodedSignaturesLength = Array();\n    encodeLength(encodedSignaturesLength, this.signatures.length);\n    const transactionLayout = BufferLayout.struct([BufferLayout.blob(encodedSignaturesLength.length, 'encodedSignaturesLength'), BufferLayout.seq(signature(), this.signatures.length, 'signatures'), BufferLayout.blob(serializedMessage.length, 'serializedMessage')]);\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode({\n      encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n      signatures: this.signatures,\n      serializedMessage\n    }, serializedTransaction);\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n  static deserialize(serializedTransaction) {\n    let byteArray = [...serializedTransaction];\n    const signatures = [];\n    const signaturesLength = decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(new Uint8Array(guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES)));\n    }\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n  sign(signers) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(signer.publicKey));\n      assert(signerIndex >= 0, `Cannot sign with non signer key ${signer.publicKey.toBase58()}`);\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n  addSignature(publicKey, signature) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(0, this.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    assert(signerIndex >= 0, `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`);\n    this.signatures[signerIndex] = signature;\n  }\n}\n\n// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nconst NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nconst DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nconst NUM_SLOTS_PER_SECOND = NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nconst MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n\nconst SYSVAR_CLOCK_PUBKEY = new PublicKey('SysvarC1ock11111111111111111111111111111111');\nconst SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey('SysvarEpochSchedu1e111111111111111111111111');\nconst SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey('Sysvar1nstructions1111111111111111111111111');\nconst SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey('SysvarRecentB1ockHashes11111111111111111111');\nconst SYSVAR_RENT_PUBKEY = new PublicKey('SysvarRent111111111111111111111111111111111');\nconst SYSVAR_REWARDS_PUBKEY = new PublicKey('SysvarRewards111111111111111111111111111111');\nconst SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey('SysvarS1otHashes111111111111111111111111111');\nconst SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey('SysvarS1otHistory11111111111111111111111111');\nconst SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey('SysvarStakeHistory1111111111111111111111111');\n\nclass SendTransactionError extends Error {\n  constructor({\n    action,\n    signature,\n    transactionMessage,\n    logs\n  }) {\n    const maybeLogsOutput = logs ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. ` : '';\n    const guideText = '\\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.';\n    let message;\n    switch (action) {\n      case 'send':\n        message = `Transaction ${signature} resulted in an error. \\n` + `${transactionMessage}. ` + maybeLogsOutput + guideText;\n        break;\n      case 'simulate':\n        message = `Simulation failed. \\nMessage: ${transactionMessage}. \\n` + maybeLogsOutput + guideText;\n        break;\n      default:\n        {\n          message = `Unknown action '${(a => a)(action)}'`;\n        }\n    }\n    super(message);\n    this.signature = void 0;\n    this.transactionMessage = void 0;\n    this.transactionLogs = void 0;\n    this.signature = signature;\n    this.transactionMessage = transactionMessage;\n    this.transactionLogs = logs ? logs : undefined;\n  }\n  get transactionError() {\n    return {\n      message: this.transactionMessage,\n      logs: Array.isArray(this.transactionLogs) ? this.transactionLogs : undefined\n    };\n  }\n\n  /* @deprecated Use `await getLogs()` instead */\n  get logs() {\n    const cachedLogs = this.transactionLogs;\n    if (cachedLogs != null && typeof cachedLogs === 'object' && 'then' in cachedLogs) {\n      return undefined;\n    }\n    return cachedLogs;\n  }\n  async getLogs(connection) {\n    if (!Array.isArray(this.transactionLogs)) {\n      this.transactionLogs = new Promise((resolve, reject) => {\n        connection.getTransaction(this.signature).then(tx => {\n          if (tx && tx.meta && tx.meta.logMessages) {\n            const logs = tx.meta.logMessages;\n            this.transactionLogs = logs;\n            resolve(logs);\n          } else {\n            reject(new Error('Log messages not found'));\n          }\n        }).catch(reject);\n      });\n    }\n    return await this.transactionLogs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nconst SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016\n};\nclass SolanaJSONRPCError extends Error {\n  constructor({\n    code,\n    message,\n    data\n  }, customMessage) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = void 0;\n    this.data = void 0;\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nasync function sendAndConfirmTransaction(connection, transaction, signers, options) {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendTransaction(transaction, signers, sendOptions);\n  let status;\n  if (transaction.recentBlockhash != null && transaction.lastValidBlockHeight != null) {\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      signature: signature,\n      blockhash: transaction.recentBlockhash,\n      lastValidBlockHeight: transaction.lastValidBlockHeight\n    }, options && options.commitment)).value;\n  } else if (transaction.minNonceContextSlot != null && transaction.nonceInfo != null) {\n    const {\n      nonceInstruction\n    } = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (await connection.confirmTransaction({\n      abortSignal: options?.abortSignal,\n      minContextSlot: transaction.minNonceContextSlot,\n      nonceAccountPubkey,\n      nonceValue: transaction.nonceInfo.nonce,\n      signature\n    }, options && options.commitment)).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn('sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' + 'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' + 'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.');\n    }\n    status = (await connection.confirmTransaction(signature, options && options.commitment)).value;\n  }\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: 'send',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n// zzz\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * @internal\n */\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nfunction encodeData(type, fields) {\n  const allocLength = type.layout.span >= 0 ? type.layout.span : getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({\n    instruction: type.index\n  }, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nfunction decodeData$1(type, buffer) {\n  let data;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (data.instruction !== type.index) {\n    throw new Error(`invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`);\n  }\n  return data;\n}\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nconst FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct([BufferLayout.u32('version'), BufferLayout.u32('state'), publicKey('authorizedPubkey'), publicKey('nonce'), BufferLayout.struct([FeeCalculatorLayout], 'feeCalculator')]);\nconst NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\n\n/**\n * NonceAccount class\n */\nclass NonceAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.authorizedPubkey = void 0;\n    this.nonce = void 0;\n    this.feeCalculator = void 0;\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(buffer) {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator\n    });\n  }\n}\n\nconst encodeDecode = layout => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {\n    decode,\n    encode\n  };\n};\nconst bigInt = length => property => {\n  const layout = blob(length, property);\n  const {\n    encode,\n    decode\n  } = encodeDecode(layout);\n  const bigIntLayout = layout;\n  bigIntLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return toBigIntLE(Buffer.from(src));\n  };\n  bigIntLayout.encode = (bigInt, buffer, offset) => {\n    const src = toBufferLE(bigInt, length);\n    return encode(src, buffer, offset);\n  };\n  return bigIntLayout;\n};\nconst u64 = bigInt(8);\n\n/**\n * Create account system transaction params\n */\n\n/**\n * Transfer system transaction params\n */\n\n/**\n * Assign system transaction params\n */\n\n/**\n * Create account with seed system transaction params\n */\n\n/**\n * Create nonce account system transaction params\n */\n\n/**\n * Create nonce account with seed system transaction params\n */\n\n/**\n * Initialize nonce account system instruction params\n */\n\n/**\n * Advance nonce account system instruction params\n */\n\n/**\n * Withdraw nonce account system transaction params\n */\n\n/**\n * Authorize nonce account system transaction params\n */\n\n/**\n * Allocate account system transaction params\n */\n\n/**\n * Allocate account with seed system transaction params\n */\n\n/**\n * Assign account with seed system transaction params\n */\n\n/**\n * Transfer with seed system transaction params\n */\n\n/** Decoded transfer system transaction instruction */\n\n/** Decoded transferWithSeed system transaction instruction */\n\n/**\n * System Instruction class\n */\nclass SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Create, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Transfer, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      space\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Allocate, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.Assign, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n    const {\n      base,\n      seed,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed, instruction.data);\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      base,\n      seed,\n      lamports,\n      space,\n      programId\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed, instruction.data);\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId)\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized\n    } = decodeData$1(SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount, instruction.data);\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized)\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nconst SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('programId')])\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports')])\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('lamports'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('authorized')])\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('space')])\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), BufferLayout.ns64('space'), publicKey('programId')])\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('base'), rustString('seed'), publicKey('programId')])\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('lamports'), rustString('seed'), publicKey('programId')])\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nclass SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.newAccountPubkey,\n        isSigner: true,\n        isWritable: true\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports)\n      });\n      keys = [{\n        pubkey: params.fromPubkey,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer())\n    });\n    let keys = [{\n      pubkey: params.fromPubkey,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: params.newAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }];\n    if (!params.basePubkey.equals(params.fromPubkey)) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(params) {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    } else {\n      transaction.add(SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.noncePubkey,\n        lamports: params.lamports,\n        space: NONCE_ACCOUNT_LENGTH,\n        programId: this.programId\n      }));\n    }\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey\n    };\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer())\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {\n      lamports: params.lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.toPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params) {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer())\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: params.noncePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(params) {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer())\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false\n      }];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space\n      });\n      keys = [{\n        pubkey: params.accountPubkey,\n        isSigner: true,\n        isWritable: true\n      }];\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nSystemProgram.programId = new PublicKey('11111111111111111111111111111111');\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nclass Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return 2 * (\n    // Every transaction requires two signatures (payer + program)\n    Math.ceil(dataLength / Loader.chunkSize) + 1 +\n    // Add one for Create transaction\n    1) // Add one for Finalize transaction\n    ;\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(connection, payer, program, programId, data) {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(data.length);\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(program.publicKey, 'confirmed');\n      let transaction = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.allocate({\n            accountPubkey: program.publicKey,\n            space: data.length\n          }));\n        }\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.assign({\n            accountPubkey: program.publicKey,\n            programId\n          }));\n        }\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(SystemProgram.transfer({\n            fromPubkey: payer.publicKey,\n            toPubkey: program.publicKey,\n            lamports: balanceNeeded - programInfo.lamports\n          }));\n        }\n      } else {\n        transaction = new Transaction().add(SystemProgram.createAccount({\n          fromPubkey: payer.publicKey,\n          newAccountPubkey: program.publicKey,\n          lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n          space: data.length,\n          programId\n        }));\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed'\n        });\n      }\n    }\n    const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.u32('offset'), BufferLayout.u32('bytesLength'), BufferLayout.u32('bytesLengthPadding'), BufferLayout.seq(BufferLayout.u8('byte'), BufferLayout.offset(BufferLayout.u32(), -8), 'bytes')]);\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode({\n        instruction: 0,\n        // Load instruction\n        offset,\n        bytes: bytes,\n        bytesLength: 0,\n        bytesLengthPadding: 0\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }],\n        programId,\n        data\n      });\n      transactions.push(sendAndConfirmTransaction(connection, transaction, [payer, program], {\n        commitment: 'confirmed'\n      }));\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct([BufferLayout.u32('instruction')]);\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // Finalize instruction\n      }, data);\n      const transaction = new Transaction().add({\n        keys: [{\n          pubkey: program.publicKey,\n          isSigner: true,\n          isWritable: true\n        }, {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false\n        }],\n        programId,\n        data\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(transaction, [payer, program], {\n        preflightCommitment: deployCommitment\n      });\n      const {\n        context,\n        value\n      } = await connection.confirmTransaction({\n        signature: finalizeSignature,\n        lastValidBlockHeight: transaction.lastValidBlockHeight,\n        blockhash: transaction.recentBlockhash\n      }, deployCommitment);\n      if (value.err) {\n        throw new Error(`Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`);\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve => setTimeout(resolve, Math.round(MS_PER_SLOT / 2)));\n      }\n    }\n\n    // success\n    return true;\n  }\n}\nLoader.chunkSize = CHUNK_SIZE;\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nconst BPF_LOADER_PROGRAM_ID = new PublicKey('BPFLoader2111111111111111111111111111111111');\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nclass BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength) {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(connection, payer, program, elf, loaderProgramId) {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar agentkeepalive = {exports: {}};\n\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nvar ms$2 = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n\n/*!\n * humanize-ms - index.js\n * Copyright(c) 2014 dead_horse <dead_horse@qq.com>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar util = require$$0;\nvar ms$1 = ms$2;\n\nvar humanizeMs = function (t) {\n  if (typeof t === 'number') return t;\n  var r = ms$1(t);\n  if (r === undefined) {\n    var err = new Error(util.format('humanize-ms(%j) result undefined', t));\n    console.warn(err.stack);\n  }\n  return r;\n};\n\nvar constants = {\n  // agent\n  CURRENT_ID: Symbol('agentkeepalive#currentId'),\n  CREATE_ID: Symbol('agentkeepalive#createId'),\n  INIT_SOCKET: Symbol('agentkeepalive#initSocket'),\n  CREATE_HTTPS_CONNECTION: Symbol('agentkeepalive#createHttpsConnection'),\n  // socket\n  SOCKET_CREATED_TIME: Symbol('agentkeepalive#socketCreatedTime'),\n  SOCKET_NAME: Symbol('agentkeepalive#socketName'),\n  SOCKET_REQUEST_COUNT: Symbol('agentkeepalive#socketRequestCount'),\n  SOCKET_REQUEST_FINISHED_COUNT: Symbol('agentkeepalive#socketRequestFinishedCount'),\n};\n\nconst OriginalAgent = require$$0$1.Agent;\nconst ms = humanizeMs;\nconst debug = require$$0.debuglog('agentkeepalive');\nconst {\n  INIT_SOCKET: INIT_SOCKET$1,\n  CURRENT_ID,\n  CREATE_ID,\n  SOCKET_CREATED_TIME,\n  SOCKET_NAME,\n  SOCKET_REQUEST_COUNT,\n  SOCKET_REQUEST_FINISHED_COUNT,\n} = constants;\n\n// OriginalAgent come from\n// - https://github.com/nodejs/node/blob/v8.12.0/lib/_http_agent.js\n// - https://github.com/nodejs/node/blob/v10.12.0/lib/_http_agent.js\n\n// node <= 10\nlet defaultTimeoutListenerCount = 1;\nconst majorVersion = parseInt(process.version.split('.', 1)[0].substring(1));\nif (majorVersion >= 11 && majorVersion <= 12) {\n  defaultTimeoutListenerCount = 2;\n} else if (majorVersion >= 13) {\n  defaultTimeoutListenerCount = 3;\n}\n\nfunction deprecate(message) {\n  console.log('[agentkeepalive:deprecated] %s', message);\n}\n\nclass Agent extends OriginalAgent {\n  constructor(options) {\n    options = options || {};\n    options.keepAlive = options.keepAlive !== false;\n    // default is keep-alive and 4s free socket timeout\n    // see https://medium.com/ssense-tech/reduce-networking-errors-in-nodejs-23b4eb9f2d83\n    if (options.freeSocketTimeout === undefined) {\n      options.freeSocketTimeout = 4000;\n    }\n    // Legacy API: keepAliveTimeout should be rename to `freeSocketTimeout`\n    if (options.keepAliveTimeout) {\n      deprecate('options.keepAliveTimeout is deprecated, please use options.freeSocketTimeout instead');\n      options.freeSocketTimeout = options.keepAliveTimeout;\n      delete options.keepAliveTimeout;\n    }\n    // Legacy API: freeSocketKeepAliveTimeout should be rename to `freeSocketTimeout`\n    if (options.freeSocketKeepAliveTimeout) {\n      deprecate('options.freeSocketKeepAliveTimeout is deprecated, please use options.freeSocketTimeout instead');\n      options.freeSocketTimeout = options.freeSocketKeepAliveTimeout;\n      delete options.freeSocketKeepAliveTimeout;\n    }\n\n    // Sets the socket to timeout after timeout milliseconds of inactivity on the socket.\n    // By default is double free socket timeout.\n    if (options.timeout === undefined) {\n      // make sure socket default inactivity timeout >= 8s\n      options.timeout = Math.max(options.freeSocketTimeout * 2, 8000);\n    }\n\n    // support humanize format\n    options.timeout = ms(options.timeout);\n    options.freeSocketTimeout = ms(options.freeSocketTimeout);\n    options.socketActiveTTL = options.socketActiveTTL ? ms(options.socketActiveTTL) : 0;\n\n    super(options);\n\n    this[CURRENT_ID] = 0;\n\n    // create socket success counter\n    this.createSocketCount = 0;\n    this.createSocketCountLastCheck = 0;\n\n    this.createSocketErrorCount = 0;\n    this.createSocketErrorCountLastCheck = 0;\n\n    this.closeSocketCount = 0;\n    this.closeSocketCountLastCheck = 0;\n\n    // socket error event count\n    this.errorSocketCount = 0;\n    this.errorSocketCountLastCheck = 0;\n\n    // request finished counter\n    this.requestCount = 0;\n    this.requestCountLastCheck = 0;\n\n    // including free socket timeout counter\n    this.timeoutSocketCount = 0;\n    this.timeoutSocketCountLastCheck = 0;\n\n    this.on('free', socket => {\n      // https://github.com/nodejs/node/pull/32000\n      // Node.js native agent will check socket timeout eqs agent.options.timeout.\n      // Use the ttl or freeSocketTimeout to overwrite.\n      const timeout = this.calcSocketTimeout(socket);\n      if (timeout > 0 && socket.timeout !== timeout) {\n        socket.setTimeout(timeout);\n      }\n    });\n  }\n\n  get freeSocketKeepAliveTimeout() {\n    deprecate('agent.freeSocketKeepAliveTimeout is deprecated, please use agent.options.freeSocketTimeout instead');\n    return this.options.freeSocketTimeout;\n  }\n\n  get timeout() {\n    deprecate('agent.timeout is deprecated, please use agent.options.timeout instead');\n    return this.options.timeout;\n  }\n\n  get socketActiveTTL() {\n    deprecate('agent.socketActiveTTL is deprecated, please use agent.options.socketActiveTTL instead');\n    return this.options.socketActiveTTL;\n  }\n\n  calcSocketTimeout(socket) {\n    /**\n     * return <= 0: should free socket\n     * return > 0: should update socket timeout\n     * return undefined: not find custom timeout\n     */\n    let freeSocketTimeout = this.options.freeSocketTimeout;\n    const socketActiveTTL = this.options.socketActiveTTL;\n    if (socketActiveTTL) {\n      // check socketActiveTTL\n      const aliveTime = Date.now() - socket[SOCKET_CREATED_TIME];\n      const diff = socketActiveTTL - aliveTime;\n      if (diff <= 0) {\n        return diff;\n      }\n      if (freeSocketTimeout && diff < freeSocketTimeout) {\n        freeSocketTimeout = diff;\n      }\n    }\n    // set freeSocketTimeout\n    if (freeSocketTimeout) {\n      // set free keepalive timer\n      // try to use socket custom freeSocketTimeout first, support headers['keep-alive']\n      // https://github.com/node-modules/urllib/blob/b76053020923f4d99a1c93cf2e16e0c5ba10bacf/lib/urllib.js#L498\n      const customFreeSocketTimeout = socket.freeSocketTimeout || socket.freeSocketKeepAliveTimeout;\n      return customFreeSocketTimeout || freeSocketTimeout;\n    }\n  }\n\n  keepSocketAlive(socket) {\n    const result = super.keepSocketAlive(socket);\n    // should not keepAlive, do nothing\n    if (!result) return result;\n\n    const customTimeout = this.calcSocketTimeout(socket);\n    if (typeof customTimeout === 'undefined') {\n      return true;\n    }\n    if (customTimeout <= 0) {\n      debug('%s(requests: %s, finished: %s) free but need to destroy by TTL, request count %s, diff is %s',\n        socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT], customTimeout);\n      return false;\n    }\n    if (socket.timeout !== customTimeout) {\n      socket.setTimeout(customTimeout);\n    }\n    return true;\n  }\n\n  // only call on addRequest\n  reuseSocket(...args) {\n    // reuseSocket(socket, req)\n    super.reuseSocket(...args);\n    const socket = args[0];\n    const req = args[1];\n    req.reusedSocket = true;\n    const agentTimeout = this.options.timeout;\n    if (getSocketTimeout(socket) !== agentTimeout) {\n      // reset timeout before use\n      socket.setTimeout(agentTimeout);\n      debug('%s reset timeout to %sms', socket[SOCKET_NAME], agentTimeout);\n    }\n    socket[SOCKET_REQUEST_COUNT]++;\n    debug('%s(requests: %s, finished: %s) reuse on addRequest, timeout %sms',\n      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT],\n      getSocketTimeout(socket));\n  }\n\n  [CREATE_ID]() {\n    const id = this[CURRENT_ID]++;\n    if (this[CURRENT_ID] === Number.MAX_SAFE_INTEGER) this[CURRENT_ID] = 0;\n    return id;\n  }\n\n  [INIT_SOCKET$1](socket, options) {\n    // bugfix here.\n    // https on node 8, 10 won't set agent.options.timeout by default\n    // TODO: need to fix on node itself\n    if (options.timeout) {\n      const timeout = getSocketTimeout(socket);\n      if (!timeout) {\n        socket.setTimeout(options.timeout);\n      }\n    }\n\n    if (this.options.keepAlive) {\n      // Disable Nagle's algorithm: http://blog.caustik.com/2012/04/08/scaling-node-js-to-100k-concurrent-connections/\n      // https://fengmk2.com/benchmark/nagle-algorithm-delayed-ack-mock.html\n      socket.setNoDelay(true);\n    }\n    this.createSocketCount++;\n    if (this.options.socketActiveTTL) {\n      socket[SOCKET_CREATED_TIME] = Date.now();\n    }\n    // don't show the hole '-----BEGIN CERTIFICATE----' key string\n    socket[SOCKET_NAME] = `sock[${this[CREATE_ID]()}#${options._agentKey}]`.split('-----BEGIN', 1)[0];\n    socket[SOCKET_REQUEST_COUNT] = 1;\n    socket[SOCKET_REQUEST_FINISHED_COUNT] = 0;\n    installListeners(this, socket, options);\n  }\n\n  createConnection(options, oncreate) {\n    let called = false;\n    const onNewCreate = (err, socket) => {\n      if (called) return;\n      called = true;\n\n      if (err) {\n        this.createSocketErrorCount++;\n        return oncreate(err);\n      }\n      this[INIT_SOCKET$1](socket, options);\n      oncreate(err, socket);\n    };\n\n    const newSocket = super.createConnection(options, onNewCreate);\n    if (newSocket) onNewCreate(null, newSocket);\n    return newSocket;\n  }\n\n  get statusChanged() {\n    const changed = this.createSocketCount !== this.createSocketCountLastCheck ||\n      this.createSocketErrorCount !== this.createSocketErrorCountLastCheck ||\n      this.closeSocketCount !== this.closeSocketCountLastCheck ||\n      this.errorSocketCount !== this.errorSocketCountLastCheck ||\n      this.timeoutSocketCount !== this.timeoutSocketCountLastCheck ||\n      this.requestCount !== this.requestCountLastCheck;\n    if (changed) {\n      this.createSocketCountLastCheck = this.createSocketCount;\n      this.createSocketErrorCountLastCheck = this.createSocketErrorCount;\n      this.closeSocketCountLastCheck = this.closeSocketCount;\n      this.errorSocketCountLastCheck = this.errorSocketCount;\n      this.timeoutSocketCountLastCheck = this.timeoutSocketCount;\n      this.requestCountLastCheck = this.requestCount;\n    }\n    return changed;\n  }\n\n  getCurrentStatus() {\n    return {\n      createSocketCount: this.createSocketCount,\n      createSocketErrorCount: this.createSocketErrorCount,\n      closeSocketCount: this.closeSocketCount,\n      errorSocketCount: this.errorSocketCount,\n      timeoutSocketCount: this.timeoutSocketCount,\n      requestCount: this.requestCount,\n      freeSockets: inspect(this.freeSockets),\n      sockets: inspect(this.sockets),\n      requests: inspect(this.requests),\n    };\n  }\n}\n\n// node 8 don't has timeout attribute on socket\n// https://github.com/nodejs/node/pull/21204/files#diff-e6ef024c3775d787c38487a6309e491dR408\nfunction getSocketTimeout(socket) {\n  return socket.timeout || socket._idleTimeout;\n}\n\nfunction installListeners(agent, socket, options) {\n  debug('%s create, timeout %sms', socket[SOCKET_NAME], getSocketTimeout(socket));\n\n  // listener socket events: close, timeout, error, free\n  function onFree() {\n    // create and socket.emit('free') logic\n    // https://github.com/nodejs/node/blob/master/lib/_http_agent.js#L311\n    // no req on the socket, it should be the new socket\n    if (!socket._httpMessage && socket[SOCKET_REQUEST_COUNT] === 1) return;\n\n    socket[SOCKET_REQUEST_FINISHED_COUNT]++;\n    agent.requestCount++;\n    debug('%s(requests: %s, finished: %s) free',\n      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT]);\n\n    // should reuse on pedding requests?\n    const name = agent.getName(options);\n    if (socket.writable && agent.requests[name] && agent.requests[name].length) {\n      // will be reuse on agent free listener\n      socket[SOCKET_REQUEST_COUNT]++;\n      debug('%s(requests: %s, finished: %s) will be reuse on agent free event',\n        socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT]);\n    }\n  }\n  socket.on('free', onFree);\n\n  function onClose(isError) {\n    debug('%s(requests: %s, finished: %s) close, isError: %s',\n      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT], isError);\n    agent.closeSocketCount++;\n  }\n  socket.on('close', onClose);\n\n  // start socket timeout handler\n  function onTimeout() {\n    // onTimeout and emitRequestTimeout(_http_client.js)\n    // https://github.com/nodejs/node/blob/v12.x/lib/_http_client.js#L711\n    const listenerCount = socket.listeners('timeout').length;\n    // node <= 10, default listenerCount is 1, onTimeout\n    // 11 < node <= 12, default listenerCount is 2, onTimeout and emitRequestTimeout\n    // node >= 13, default listenerCount is 3, onTimeout,\n    //   onTimeout(https://github.com/nodejs/node/pull/32000/files#diff-5f7fb0850412c6be189faeddea6c5359R333)\n    //   and emitRequestTimeout\n    const timeout = getSocketTimeout(socket);\n    const req = socket._httpMessage;\n    const reqTimeoutListenerCount = req && req.listeners('timeout').length || 0;\n    debug('%s(requests: %s, finished: %s) timeout after %sms, listeners %s, defaultTimeoutListenerCount %s, hasHttpRequest %s, HttpRequest timeoutListenerCount %s',\n      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT],\n      timeout, listenerCount, defaultTimeoutListenerCount, !!req, reqTimeoutListenerCount);\n    if (debug.enabled) {\n      debug('timeout listeners: %s', socket.listeners('timeout').map(f => f.name).join(', '));\n    }\n    agent.timeoutSocketCount++;\n    const name = agent.getName(options);\n    if (agent.freeSockets[name] && agent.freeSockets[name].indexOf(socket) !== -1) {\n      // free socket timeout, destroy quietly\n      socket.destroy();\n      // Remove it from freeSockets list immediately to prevent new requests\n      // from being sent through this socket.\n      agent.removeSocket(socket, options);\n      debug('%s is free, destroy quietly', socket[SOCKET_NAME]);\n    } else {\n      // if there is no any request socket timeout handler,\n      // agent need to handle socket timeout itself.\n      //\n      // custom request socket timeout handle logic must follow these rules:\n      //  1. Destroy socket first\n      //  2. Must emit socket 'agentRemove' event tell agent remove socket\n      //     from freeSockets list immediately.\n      //     Otherise you may be get 'socket hang up' error when reuse\n      //     free socket and timeout happen in the same time.\n      if (reqTimeoutListenerCount === 0) {\n        const error = new Error('Socket timeout');\n        error.code = 'ERR_SOCKET_TIMEOUT';\n        error.timeout = timeout;\n        // must manually call socket.end() or socket.destroy() to end the connection.\n        // https://nodejs.org/dist/latest-v10.x/docs/api/net.html#net_socket_settimeout_timeout_callback\n        socket.destroy(error);\n        agent.removeSocket(socket, options);\n        debug('%s destroy with timeout error', socket[SOCKET_NAME]);\n      }\n    }\n  }\n  socket.on('timeout', onTimeout);\n\n  function onError(err) {\n    const listenerCount = socket.listeners('error').length;\n    debug('%s(requests: %s, finished: %s) error: %s, listenerCount: %s',\n      socket[SOCKET_NAME], socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT],\n      err, listenerCount);\n    agent.errorSocketCount++;\n    if (listenerCount === 1) {\n      // if socket don't contain error event handler, don't catch it, emit it again\n      debug('%s emit uncaught error event', socket[SOCKET_NAME]);\n      socket.removeListener('error', onError);\n      socket.emit('error', err);\n    }\n  }\n  socket.on('error', onError);\n\n  function onRemove() {\n    debug('%s(requests: %s, finished: %s) agentRemove',\n      socket[SOCKET_NAME],\n      socket[SOCKET_REQUEST_COUNT], socket[SOCKET_REQUEST_FINISHED_COUNT]);\n    // We need this function for cases like HTTP 'upgrade'\n    // (defined by WebSockets) where we need to remove a socket from the\n    // pool because it'll be locked up indefinitely\n    socket.removeListener('close', onClose);\n    socket.removeListener('error', onError);\n    socket.removeListener('free', onFree);\n    socket.removeListener('timeout', onTimeout);\n    socket.removeListener('agentRemove', onRemove);\n  }\n  socket.on('agentRemove', onRemove);\n}\n\nvar agent = Agent;\n\nfunction inspect(obj) {\n  const res = {};\n  for (const key in obj) {\n    res[key] = obj[key].length;\n  }\n  return res;\n}\n\nconst OriginalHttpsAgent = require$$0$2.Agent;\nconst HttpAgent = agent;\nconst {\n  INIT_SOCKET,\n  CREATE_HTTPS_CONNECTION,\n} = constants;\n\nlet HttpsAgent$1 = class HttpsAgent extends HttpAgent {\n  constructor(options) {\n    super(options);\n\n    this.defaultPort = 443;\n    this.protocol = 'https:';\n    this.maxCachedSessions = this.options.maxCachedSessions;\n    /* istanbul ignore next */\n    if (this.maxCachedSessions === undefined) {\n      this.maxCachedSessions = 100;\n    }\n\n    this._sessionCache = {\n      map: {},\n      list: [],\n    };\n  }\n\n  createConnection(options, oncreate) {\n    const socket = this[CREATE_HTTPS_CONNECTION](options, oncreate);\n    this[INIT_SOCKET](socket, options);\n    return socket;\n  }\n};\n\n// https://github.com/nodejs/node/blob/master/lib/https.js#L89\nHttpsAgent$1.prototype[CREATE_HTTPS_CONNECTION] = OriginalHttpsAgent.prototype.createConnection;\n\n[\n  'getName',\n  '_getSession',\n  '_cacheSession',\n  // https://github.com/nodejs/node/pull/4982\n  '_evictSession',\n].forEach(function(method) {\n  /* istanbul ignore next */\n  if (typeof OriginalHttpsAgent.prototype[method] === 'function') {\n    HttpsAgent$1.prototype[method] = OriginalHttpsAgent.prototype[method];\n  }\n});\n\nvar https_agent = HttpsAgent$1;\n\nagentkeepalive.exports = agent;\nvar HttpsAgent = agentkeepalive.exports.HttpsAgent = https_agent;\nagentkeepalive.exports.constants = constants;\n\nvar agentkeepaliveExports = agentkeepalive.exports;\nvar HttpKeepAliveAgent = /*@__PURE__*/getDefaultExportFromCjs(agentkeepaliveExports);\n\nvar objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nvar fastStableStringify = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n\nvar fastStableStringify$1 = /*@__PURE__*/getDefaultExportFromCjs(fastStableStringify);\n\nconst MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nclass EpochSchedule {\n  constructor(slotsPerEpoch, leaderScheduleSlotOffset, warmup, firstNormalEpoch, firstNormalSlot) {\n    /** The maximum number of slots in each epoch */\n    this.slotsPerEpoch = void 0;\n    /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n    this.leaderScheduleSlotOffset = void 0;\n    /** Indicates whether epochs start short and grow */\n    this.warmup = void 0;\n    /** The first epoch with `slotsPerEpoch` slots */\n    this.firstNormalEpoch = void 0;\n    /** The first slot of `firstNormalEpoch` */\n    this.firstNormalSlot = void 0;\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n  getEpoch(slot) {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n  getEpochAndSlotIndex(slot) {\n    if (slot < this.firstNormalSlot) {\n      const epoch = trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) - trailingZeros(MINIMUM_SLOT_PER_EPOCH) - 1;\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n  getFirstSlotInEpoch(epoch) {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (epoch - this.firstNormalEpoch) * this.slotsPerEpoch + this.firstNormalSlot;\n    }\n  }\n  getLastSlotInEpoch(epoch) {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n  getSlotsInEpoch(epoch) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n\nvar fetchImpl = typeof globalThis.fetch === 'function' ?\n// The Fetch API is supported experimentally in Node 17.5+ and natively in Node 18+.\nglobalThis.fetch :\n// Otherwise use the polyfill.\nasync function (input, init) {\n  const processedInput = typeof input === 'string' && input.slice(0, 2) === '//' ? 'https:' + input : input;\n  return await nodeFetch.default(processedInput, init);\n};\n\nclass RpcWebSocketClient extends CommonClient {\n  constructor(address, options, generate_request_id) {\n    const webSocketFactory = url => {\n      const rpc = WebSocket(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket;\n      } else {\n        this.underlyingSocket = rpc;\n      }\n      return rpc;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n    this.underlyingSocket = void 0;\n  }\n  call(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(new Error('Tried to call a JSON-RPC method `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n  notify(...args) {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(new Error('Tried to send a JSON-RPC notification `' + args[0] + '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' + readyState + ')'));\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nfunction decodeData(type, data) {\n  let decoded;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(`invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`);\n  }\n  return decoded;\n}\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\nclass AddressLookupTableAccount {\n  constructor(args) {\n    this.key = void 0;\n    this.state = void 0;\n    this.key = args.key;\n    this.state = args.state;\n  }\n  isActive() {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n  static deserialize(accountData) {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {\n      addresses\n    } = BufferLayout.struct([BufferLayout.seq(publicKey(), numSerializedAddresses, 'addresses')]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority: meta.authority.length !== 0 ? new PublicKey(meta.authority[0]) : undefined,\n      addresses: addresses.map(address => new PublicKey(address))\n    };\n  }\n}\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct([BufferLayout.u32('typeIndex'), u64('deactivationSlot'), BufferLayout.nu64('lastExtendedSlot'), BufferLayout.u8('lastExtendedStartIndex'), BufferLayout.u8(),\n  // option\n  BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u8(), -1), 'authority')])\n};\n\nconst URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\nfunction makeWebsocketUrl(endpoint) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [_,\n  // eslint-disable-line @typescript-eslint/no-unused-vars\n  hostish, portWithColon, rest] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort = portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to agave-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n\nconst PublicKeyFromString = coerce(instance(PublicKey), string(), value => new PublicKey(value));\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\nconst BufferFromRawAccountData = coerce(instance(Buffer), RawAccountDataResult, value => Buffer.from(value[0], 'base64'));\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nconst BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\n\n/** @internal */\n/** @internal */\n/** @internal */\n/** @internal */\n\n/** @internal */\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\n\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\n\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\n\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\n\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\n\n/**\n * @internal\n */\n\n/**\n * Extra contextual information for RPC responses\n */\n\n/**\n * Options for sending transactions\n */\n\n/**\n * Options for confirming transactions\n */\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\n\n/**\n * Options for getSignaturesForAddress\n */\n\n/**\n * RPC Response with extra contextual information\n */\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\n\n/**\n * This type represents all transaction confirmation strategies\n */\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig(commitmentOrConfig) {\n  let commitment;\n  let config;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {\n      commitment: specifiedCommitment,\n      ...specifiedConfig\n    } = commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {\n    commitment,\n    config\n  };\n}\n\n/**\n * @internal\n */\nfunction applyDefaultMemcmpEncodingToFilters(filters) {\n  return filters.map(filter => 'memcmp' in filter ? {\n    ...filter,\n    memcmp: {\n      ...filter.memcmp,\n      encoding: filter.memcmp.encoding ?? 'base58'\n    }\n  } : filter);\n}\n\n/**\n * @internal\n */\nfunction createRpcResult(result) {\n  return union([type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    result\n  }), type({\n    jsonrpc: literal('2.0'),\n    id: string(),\n    error: type({\n      code: unknown(),\n      message: string(),\n      data: optional(any())\n    })\n  })]);\n}\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult(schema) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema)\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext(value) {\n  return jsonRpcResult(type({\n    context: type({\n      slot: number()\n    }),\n    value\n  }));\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext(value) {\n  return type({\n    context: type({\n      slot: number()\n    }),\n    value\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(version, response) {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(accountKey => new PublicKey(accountKey)),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data)\n      })),\n      addressTableLookups: response.addressTableLookups\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n// Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\n\n/**\n * Configuration object for changing query behavior\n */\n\n/**\n * Information describing a cluster node\n */\n\n/**\n * Information describing a vote account\n */\n\n/**\n * A collection of cluster vote accounts\n */\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\n\nconst GetInflationGovernorResult = type({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number()\n});\n\n/**\n * The inflation reward for an epoch\n */\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(array(nullable(type({\n  epoch: number(),\n  effectiveSlot: number(),\n  amount: number(),\n  postBalance: number(),\n  commission: optional(nullable(number()))\n}))));\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(type({\n  slot: number(),\n  prioritizationFee: number()\n}));\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = type({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number()\n});\n\n/**\n * Information about the current epoch\n */\n\nconst GetEpochInfoResult = type({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number())\n});\nconst GetEpochScheduleResult = type({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number()\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([type({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = type({\n  err: TransactionErrorResult\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\n\nconst VersionResult = type({\n  'solana-core': string(),\n  'feature-set': optional(number())\n});\nconst ParsedInstructionStruct = type({\n  program: string(),\n  programId: PublicKeyFromString,\n  parsed: unknown()\n});\nconst PartiallyDecodedInstructionStruct = type({\n  programId: PublicKeyFromString,\n  accounts: array(PublicKeyFromString),\n  data: string()\n});\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(type({\n  err: nullable(union([type({}), string()])),\n  logs: nullable(array(string())),\n  accounts: optional(nullable(array(nullable(type({\n    executable: boolean(),\n    owner: string(),\n    lamports: number(),\n    data: array(string()),\n    rentEpoch: optional(number())\n  }))))),\n  unitsConsumed: optional(number()),\n  returnData: optional(nullable(type({\n    programId: string(),\n    data: tuple([string(), literal('base64')])\n  }))),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(union([ParsedInstructionStruct, PartiallyDecodedInstructionStruct]))\n  }))))\n}));\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction from the RPC API\n */\n\n/**\n * A processed transaction message from the RPC API\n */\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\n\n/**\n * A partially decoded transaction instruction\n */\n\n/**\n * A parsed transaction message account\n */\n\n/**\n * A parsed transaction instruction\n */\n\n/**\n * A parsed address table lookup\n */\n\n/**\n * A parsed transaction message\n */\n\n/**\n * A parsed transaction\n */\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\n\n/**\n * A parsed transaction on the ledger with meta\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A block with parsed transactions\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\n\n/**\n * A processed block fetched from the RPC API\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since RPC v1.8.0.\n */\n\n/**\n * A Block on the ledger with signatures only\n */\n\n/**\n * recent block production information\n */\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(type({\n  byIdentity: record(string(), array(number())),\n  range: type({\n    firstSlot: number(),\n    lastSlot: number()\n  })\n}));\n\n/**\n * A performance sample\n */\n\nfunction createRpcClient(url, httpHeaders, customFetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent) {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent;\n  {\n    if (httpAgent == null) {\n      {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof Agent$1)) {\n          throw new Error('The endpoint `' + url + '` can only be paired with an `https.Agent`. You have, instead, supplied an ' + '`http.Agent` through `httpAgent`.');\n        } else if (!isHttps && httpAgent instanceof Agent$1) {\n          throw new Error('The endpoint `' + url + '` can only be paired with an `http.Agent`. You have, instead, supplied an ' + '`https.Agent` through `httpAgent`.');\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n  let fetchWithMiddleware;\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise((resolve, reject) => {\n        try {\n          fetchMiddleware(info, init, (modifiedInfo, modifiedInit) => resolve([modifiedInfo, modifiedInit]));\n        } catch (error) {\n          reject(error);\n        }\n      });\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign({\n        'Content-Type': 'application/json'\n      }, httpHeaders || {}, COMMON_HTTP_HEADERS)\n    };\n    try {\n      let too_many_requests_retries = 5;\n      let res;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(`Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`);\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n  return clientBrowser;\n}\nfunction createRpcRequest(client) {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\nfunction createRpcBatchRequest(client) {\n  return requests => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n      const batch = requests.map(params => {\n        return client.request(params.methodName, params.args);\n      });\n      client.request(batch, (err, response) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(GetRecentPrioritizationFeesResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(type({\n  total: number(),\n  circulating: number(),\n  nonCirculating: number(),\n  nonCirculatingAccounts: array(PublicKeyFromString)\n}));\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = type({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n});\n\n/**\n * Token address and balance.\n */\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(array(type({\n  address: PublicKeyFromString,\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: BufferFromRawAccountData,\n    rentEpoch: number()\n  })\n})));\nconst ParsedAccountDataResult = type({\n  program: string(),\n  parsed: unknown(),\n  space: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(array(type({\n  pubkey: PublicKeyFromString,\n  account: type({\n    executable: boolean(),\n    owner: PublicKeyFromString,\n    lamports: number(),\n    data: ParsedAccountDataResult,\n    rentEpoch: number()\n  })\n})));\n\n/**\n * Pair of an account address and its balance\n */\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(array(type({\n  lamports: number(),\n  address: PublicKeyFromString\n})));\n\n/**\n * @internal\n */\nconst AccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number()\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\nconst ParsedOrRawAccountData = coerce(union([instance(Buffer), ParsedAccountDataResult]), union([RawAccountDataResult, ParsedAccountDataResult]), value => {\n  if (Array.isArray(value)) {\n    return create(value, BufferFromRawAccountData);\n  } else {\n    return value;\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = type({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number()\n});\nconst KeyedParsedAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = type({\n  state: union([literal('active'), literal('inactive'), literal('activating'), literal('deactivating')]),\n  active: number(),\n  inactive: number()\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(array(type({\n  signature: string(),\n  slot: number(),\n  err: TransactionErrorResult,\n  memo: nullable(string()),\n  blockTime: optional(nullable(number()))\n})));\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = type({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult)\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = type({\n  parent: number(),\n  slot: number(),\n  root: number()\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = type({\n  subscription: number(),\n  result: SlotInfoResult\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([type({\n  type: union([literal('firstShredReceived'), literal('completed'), literal('optimisticConfirmation'), literal('root')]),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('createdBank'),\n  parent: number(),\n  slot: number(),\n  timestamp: number()\n}), type({\n  type: literal('frozen'),\n  slot: number(),\n  timestamp: number(),\n  stats: type({\n    numTransactionEntries: number(),\n    numSuccessfulTransactions: number(),\n    numFailedTransactions: number(),\n    maxTransactionsPerEntry: number()\n  })\n}), type({\n  type: literal('dead'),\n  slot: number(),\n  timestamp: number(),\n  err: string()\n})]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = type({\n  subscription: number(),\n  result: SlotUpdateResult\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = type({\n  subscription: number(),\n  result: notificationResultAndContext(union([SignatureStatusResult, SignatureReceivedResult]))\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = type({\n  subscription: number(),\n  result: number()\n});\nconst ContactInfoResult = type({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string())\n});\nconst VoteAccountInfoResult = type({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number())\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(type({\n  current: array(VoteAccountInfoResult),\n  delinquent: array(VoteAccountInfoResult)\n}));\nconst ConfirmationStatus = union([literal('processed'), literal('confirmed'), literal('finalized')]);\nconst SignatureStatusResponse = type({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus)\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(array(nullable(SignatureStatusResponse)));\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\nconst AddressTableLookupStruct = type({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number())\n});\nconst ConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(string()),\n    header: type({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number()\n    }),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    })),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct))\n  })\n});\nconst AnnotatedAccountKey = type({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')]))\n});\nconst ConfirmedTransactionAccountsModeResult = type({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string())\n});\nconst ParsedInstructionResult = type({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString\n});\nconst RawInstructionResult = type({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString\n});\nconst InstructionResult = union([RawInstructionResult, ParsedInstructionResult]);\nconst UnknownInstructionResult = union([type({\n  parsed: unknown(),\n  program: string(),\n  programId: string()\n}), type({\n  accounts: array(string()),\n  data: string(),\n  programId: string()\n})]);\nconst ParsedOrRawInstruction = coerce(InstructionResult, UnknownInstructionResult, value => {\n  if ('accounts' in value) {\n    return create(value, RawInstructionResult);\n  } else {\n    return create(value, ParsedInstructionResult);\n  }\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = type({\n  signatures: array(string()),\n  message: type({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct)))\n  })\n});\nconst TokenBalanceResult = type({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult\n});\nconst LoadedAddressesResult = type({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString)\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(type({\n      accounts: array(number()),\n      data: string(),\n      programIdIndex: number()\n    }))\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = type({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(nullable(array(type({\n    index: number(),\n    instructions: array(ParsedOrRawInstruction)\n  })))),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number())\n});\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = type({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number()))\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ParsedConfirmedTransactionResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionAccountsModeResult,\n    meta: nullable(ParsedConfirmedTransactionMetaResult),\n    version: optional(TransactionVersionStruct)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number()),\n  blockHeight: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  transactions: array(type({\n    transaction: ConfirmedTransactionResult,\n    meta: nullable(ConfirmedTransactionMetaResult)\n  })),\n  rewards: optional(array(RewardsResult)),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(nullable(type({\n  blockhash: string(),\n  previousBlockhash: string(),\n  parentSlot: number(),\n  signatures: array(string()),\n  blockTime: nullable(number())\n})));\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  meta: nullable(ConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  transaction: ConfirmedTransactionResult,\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(nullable(type({\n  slot: number(),\n  transaction: ParsedConfirmedTransactionResult,\n  meta: nullable(ParsedConfirmedTransactionMetaResult),\n  blockTime: optional(nullable(number())),\n  version: optional(TransactionVersionStruct)\n})));\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since RPC v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n}));\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(type({\n  blockhash: string(),\n  lastValidBlockHeight: number()\n}));\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\nconst PerfSampleResult = type({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number()\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(array(PerfSampleResult));\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(nullable(type({\n  feeCalculator: type({\n    lamportsPerSignature: number()\n  })\n})));\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\n\n/**\n * Parsed account data\n */\n\n/**\n * Stake Activation data\n */\n\n/**\n * Data slice argument for getProgramAccounts\n */\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\n\n/**\n * A filter object for getProgramAccounts\n */\n\n/**\n * Configuration object for getProgramAccounts requests\n */\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\n\n/**\n * Configuration object for getMultipleAccounts\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getStakeActivation`\n */\n\n/**\n * Configuration object for `getNonce`\n */\n\n/**\n * Configuration object for `getNonceAndContext`\n */\n\n/**\n * Information describing an account\n */\n\n/**\n * Account information identified by pubkey\n */\n\n/**\n * Callback function for account change notifications\n */\n\n/**\n * Callback function for program account change notifications\n */\n\n/**\n * Callback function for slot change notifications\n */\n\n/**\n * Callback function for slot update notifications\n */\n\n/**\n * Callback function for signature status notifications\n */\n\n/**\n * Signature status notification with transaction result\n */\n\n/**\n * Signature received notification\n */\n\n/**\n * Callback function for signature notifications\n */\n\n/**\n * Signature subscription options\n */\n\n/**\n * Callback function for root change notifications\n */\n\n/**\n * @internal\n */\nconst LogsResult = type({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string()\n});\n\n/**\n * Logs result.\n */\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = type({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number()\n});\n\n/**\n * Filter for log subscriptions.\n */\n\n/**\n * Callback function for log notifications.\n */\n\n/**\n * Signature result\n */\n\n/**\n * Transaction error\n */\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\n\n/**\n * Signature status\n */\n\n/**\n * A confirmed signature with its status\n */\n\n/**\n * An object defining headers to be passed to the RPC server\n */\n\n/**\n * The type of the JavaScript `fetch()` API\n */\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\n\n/**\n * Configuration for instantiating a Connection\n */\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${\"1.0.0-maintenance\"}`\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nclass Connection {\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(endpoint, _commitmentOrConfig) {\n    /** @internal */\n    this._commitment = void 0;\n    /** @internal */\n    this._confirmTransactionInitialTimeout = void 0;\n    /** @internal */\n    this._rpcEndpoint = void 0;\n    /** @internal */\n    this._rpcWsEndpoint = void 0;\n    /** @internal */\n    this._rpcClient = void 0;\n    /** @internal */\n    this._rpcRequest = void 0;\n    /** @internal */\n    this._rpcBatchRequest = void 0;\n    /** @internal */\n    this._rpcWebSocket = void 0;\n    /** @internal */\n    this._rpcWebSocketConnected = false;\n    /** @internal */\n    this._rpcWebSocketHeartbeat = null;\n    /** @internal */\n    this._rpcWebSocketIdleTimeout = null;\n    /** @internal\n     * A number that we increment every time an active connection closes.\n     * Used to determine whether the same socket connection that was open\n     * when an async operation started is the same one that's active when\n     * its continuation fires.\n     *\n     */\n    this._rpcWebSocketGeneration = 0;\n    /** @internal */\n    this._disableBlockhashCaching = false;\n    /** @internal */\n    this._pollingBlockhash = false;\n    /** @internal */\n    this._blockhashInfo = {\n      latestBlockhash: null,\n      lastFetch: 0,\n      transactionSignatures: [],\n      simulatedSignatures: []\n    };\n    /** @internal */\n    this._nextClientSubscriptionId = 0;\n    /** @internal */\n    this._subscriptionDisposeFunctionsByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionHashByClientSubscriptionId = {};\n    /** @internal */\n    this._subscriptionStateChangeCallbacksByHash = {};\n    /** @internal */\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    /** @internal */\n    this._subscriptionsByHash = {};\n    /**\n     * Special case.\n     * After a signature is processed, RPCs automatically dispose of the\n     * subscription on the server side. We need to track which of these\n     * subscriptions have been disposed in such a way, so that we know\n     * whether the client is dealing with a not-yet-processed signature\n     * (in which case we must tear down the server subscription) or an\n     * already-processed signature (in which case the client can simply\n     * clear out the subscription locally without telling the server).\n     *\n     * NOTE: There is a proposal to eliminate this special case, here:\n     * https://github.com/solana-labs/solana/issues/18892\n     */\n    /** @internal */\n    this._subscriptionsAutoDisposedByRpc = new Set();\n    /*\n     * Returns the current block height of the node\n     */\n    this.getBlockHeight = (() => {\n      const requestPromises = {};\n      return async commitmentOrConfig => {\n        const {\n          commitment,\n          config\n        } = extractCommitmentFromConfig(commitmentOrConfig);\n        const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n        const requestHash = fastStableStringify$1(args);\n        requestPromises[requestHash] = requestPromises[requestHash] ?? (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(res.error, 'failed to get block height information');\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n        return await requestPromises[requestHash];\n      };\n    })();\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (_commitmentOrConfig && typeof _commitmentOrConfig === 'string') {\n      this._commitment = _commitmentOrConfig;\n    } else if (_commitmentOrConfig) {\n      this._commitment = _commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout = _commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = _commitmentOrConfig.wsEndpoint;\n      httpHeaders = _commitmentOrConfig.httpHeaders;\n      fetch = _commitmentOrConfig.fetch;\n      fetchMiddleware = _commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = _commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = _commitmentOrConfig.httpAgent;\n    }\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n    this._rpcClient = createRpcClient(endpoint, httpHeaders, fetch, fetchMiddleware, disableRetryOnRateLimit, httpAgent);\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on('accountNotification', this._wsOnAccountNotification.bind(this));\n    this._rpcWebSocket.on('programNotification', this._wsOnProgramAccountNotification.bind(this));\n    this._rpcWebSocket.on('slotNotification', this._wsOnSlotNotification.bind(this));\n    this._rpcWebSocket.on('slotsUpdatesNotification', this._wsOnSlotUpdatesNotification.bind(this));\n    this._rpcWebSocket.on('signatureNotification', this._wsOnSignatureNotification.bind(this));\n    this._rpcWebSocket.on('rootNotification', this._wsOnRootNotification.bind(this));\n    this._rpcWebSocket.on('logsNotification', this._wsOnLogsNotification.bind(this));\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment() {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint() {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(publicKey, commitmentOrConfig) {\n    /** @internal */\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get balance for ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(publicKey, commitmentOrConfig) {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get balance of account ' + publicKey.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot) {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get block time for slot ${slot}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot() {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get minimum ledger slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock() {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get first available block');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(config) {\n    let configArg = {};\n    if (typeof config === 'string') {\n      configArg = {\n        commitment: config\n      };\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: config && config.commitment || this.commitment\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment\n      };\n    }\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(tokenMintAddress, commitment) {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(tokenAddress, commitment) {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token account balance');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(ownerAddress, filter, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(ownerAddress, filter, commitment) {\n    let _args = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({\n        mint: filter.mint.toBase58()\n      });\n    } else {\n      _args.push({\n        programId: filter.programId.toBase58()\n      });\n    }\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get token accounts owned by account ${ownerAddress.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(config) {\n    const arg = {\n      ...config,\n      commitment: config && config.commitment || this.commitment\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(mintAddress, commitment) {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(AccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(publicKey, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info about account ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(publicKey, commitmentOrConfig) {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get info about account ' + publicKey.toBase58() + ': ' + e);\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(publicKeys, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(array(nullable(AccountInfoResult))));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get info for accounts ${keys}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(publicKeys, commitmentOrConfig) {\n    const res = await this.getMultipleAccountsInfoAndContext(publicKeys, commitmentOrConfig);\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   *\n   * @deprecated Deprecated since RPC v1.18; will be removed in a future version.\n   */\n  async getStakeActivation(publicKey, commitmentOrConfig, epoch) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get Stake Activation ${publicKey.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const {\n      encoding,\n      ...configWithoutEncoding\n    } = config || {};\n    const args = this._buildArgs([programId.toBase58()], commitment, encoding || 'base64', {\n      ...configWithoutEncoding,\n      ...(configWithoutEncoding.filters ? {\n        filters: applyDefaultMemcmpEncodingToFilters(configWithoutEncoding.filters)\n      } : null)\n    });\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res = configWithoutEncoding.withContext === true ? create(unsafeRes, jsonRpcResultAndContext(baseSchema)) : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(programId, configOrCommitment) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs([programId.toBase58()], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedParsedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get accounts owned by program ${programId.toBase58()}`);\n    }\n    return res.result;\n  }\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(strategy, commitment) {\n    let rawSignature;\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy;\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy\n      });\n    }\n  }\n  getCancellationPromise(signal) {\n    return new Promise((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n  getTransactionConfirmationPromise({\n    commitment,\n    signature\n  }) {\n    let signatureSubscriptionId;\n    let disposeSignatureSubscriptionStateChangeObserver;\n    let done = false;\n    const confirmationPromise = new Promise((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(signature, (result, context) => {\n          signatureSubscriptionId = undefined;\n          const response = {\n            context,\n            value: result\n          };\n          resolve({\n            __type: TransactionStatus.PROCESSED,\n            response\n          });\n        }, commitment);\n        const subscriptionSetupPromise = new Promise(resolveSubscriptionSetup => {\n          if (signatureSubscriptionId == null) {\n            resolveSubscriptionSetup();\n          } else {\n            disposeSignatureSubscriptionStateChangeObserver = this._onSubscriptionStateChange(signatureSubscriptionId, nextState => {\n              if (nextState === 'subscribed') {\n                resolveSubscriptionSetup();\n              }\n            });\n          }\n        });\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {\n            context,\n            value\n          } = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip':\n                {\n                  if (value.confirmationStatus === 'processed') {\n                    return;\n                  }\n                  break;\n                }\n              case 'finalized':\n              case 'max':\n              case 'root':\n                {\n                  if (value.confirmationStatus === 'processed' || value.confirmationStatus === 'confirmed') {\n                    return;\n                  }\n                  break;\n                }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value\n              }\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {\n      abortConfirmation,\n      confirmationPromise\n    };\n  }\n  async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      lastValidBlockHeight,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({\n          __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED\n        });\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature\n    }\n  }) {\n    let done = false;\n    const expiryPromise = new Promise(resolve => {\n      let currentNonceValue = nonceValue;\n      let lastCheckedSlot = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {\n            context,\n            value: nonceAccount\n          } = await this.getNonceAndContext(nonceAccountPubkey, {\n            commitment,\n            minContextSlot\n          });\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result;\n    try {\n      const outcome = await Promise.race([cancellationPromise, confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus;\n        while (true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (status.context.slot < (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {\n            confirmationStatus\n          } = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (confirmationStatus !== 'processed' && confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (confirmationStatus !== 'confirmed' && confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              (_ => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {\n              err: signatureStatus.value.err\n            }\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n  async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip':\n          {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n      }\n      timeoutId = setTimeout(() => resolve({\n        __type: TransactionStatus.TIMED_OUT,\n        timeoutMs\n      }), timeoutMs);\n    });\n    const {\n      abortConfirmation,\n      confirmationPromise\n    } = this.getTransactionConfirmationPromise({\n      commitment,\n      signature\n    });\n    let result;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(signature, outcome.timeoutMs / 1000);\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes() {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(startSlot, limit) {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(signature, config) {\n    const {\n      context,\n      value: values\n    } = await this.getSignatureStatuses([signature], config);\n    assert(values.length === 1);\n    const value = values[0];\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(signatures, config) {\n    const params = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction count');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since RPC v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment) {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(addresses, epoch, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([addresses.map(pubkey => pubkey.toBase58())], commitment, undefined /* encoding */, {\n      ...config,\n      epoch: epoch != null ? epoch : config?.epoch\n    });\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate() {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule() {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(epochSchedule.slotsPerEpoch, epochSchedule.leaderScheduleSlotOffset, epochSchedule.warmup, epochSchedule.firstNormalEpoch, epochSchedule.firstNormalSlot);\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule() {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(dataLength, commitment) {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest('getMinimumBalanceForRentExemption', args);\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment) {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(limit) {\n    const unsafeRes = await this._rpcRequest('getRecentPerformanceSamples', limit ? [limit] : []);\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent performance samples');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since RPC v1.9.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(blockhash, commitment) {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeCalculatorForBlockhash', args);\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {\n      context,\n      value\n    } = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(message, commitment) {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(config) {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest('getRecentPrioritizationFees', args);\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent prioritization fees');\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since RPC v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(commitment) {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(commitmentOrConfig) {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(blockhash, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs([blockhash], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to determine if the blockhash `' + blockhash + '`is valid');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion() {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash() {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            const {\n              result\n            } = res;\n            return result ? {\n              ...result,\n              transactions: result.transactions.map(({\n                transaction,\n                meta,\n                version\n              }) => ({\n                meta,\n                transaction: {\n                  ...transaction,\n                  message: versionedMessageFromResponse(version, transaction.message)\n                },\n                version\n              }))\n            } : null;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get confirmed block');\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(slot, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts':\n          {\n            const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        case 'none':\n          {\n            const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n        default:\n          {\n            const res = create(unsafeRes, GetParsedBlockRpcResult);\n            if ('error' in res) {\n              throw res.error;\n            }\n            return res.result;\n          }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e, 'failed to get block');\n    }\n  }\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(configOrCommitment) {\n    let extra;\n    let commitment;\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {\n        commitment: c,\n        ...rest\n      } = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block production information');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(signature, rawConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(result.version, result.transaction.message)\n      }\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(signature, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed', config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(signatures, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, undefined /* encoding */, config);\n      return {\n        methodName: 'getTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(result.version, result.transaction.message)\n        }\n      };\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message\n          }\n        };\n      })\n    };\n    return {\n      ...block,\n      transactions: block.transactions.map(({\n        transaction,\n        meta\n      }) => {\n        return {\n          meta,\n          transaction: Transaction.populate(transaction.message, transaction.signatures)\n        };\n      })\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(startSlot, endSlot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed(endSlot !== undefined ? [startSlot, endSlot] : [startSlot], commitment);\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(slot, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment, undefined, {\n      transactionDetails: 'signatures',\n      rewards: false\n    });\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    const result = res.result;\n    if (!result) return result;\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures)\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(signature, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(signatures, commitment) {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment, 'jsonParsed');\n      return {\n        methodName: 'getConfirmedTransaction',\n        args\n      };\n    });\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map(unsafeRes => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get confirmed transactions');\n      }\n      return res.result;\n    });\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since RPC v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(address, startSlot, endSlot) {\n    let options = {};\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(startSlot, 'finalized');\n        if (block.signatures.length > 0) {\n          options.until = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before = block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(address, options);\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   * @deprecated Deprecated since RPC v1.7.0. Please use {@link getSignaturesForAddress} instead.\n   */\n  async getConfirmedSignaturesForAddress2(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getConfirmedSignaturesForAddress2', args);\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed signatures for address');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(address, options, commitment) {\n    const args = this._buildArgsAtLeastConfirmed([address.toBase58()], commitment, undefined, options);\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signatures for address');\n    }\n    return res.result;\n  }\n  async getAddressLookupTable(accountKey, config) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(accountKey, config);\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data)\n      });\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(nonceAccount, commitmentOrConfig) {\n    const {\n      context,\n      value: accountInfo\n    } = await this.getAccountInfoAndContext(nonceAccount, commitmentOrConfig);\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n    return {\n      context,\n      value\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(nonceAccount, commitmentOrConfig) {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig).then(x => x.value).catch(e => {\n      throw new Error('failed to get nonce for account ' + nonceAccount.toBase58() + ': ' + e);\n    });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(to, lamports) {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [to.toBase58(), lamports]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `airdrop to ${to.toBase58()} failed`);\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(disableCache) {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash() {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash ? cachedLatestBlockhash.blockhash : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: []\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n      throw new Error(`Unable to obtain a new blockhash after ${Date.now() - startTime}ms`);\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(config) {\n    const {\n      commitment,\n      config: configArg\n    } = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, `failed to get stake minimum delegation`);\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(transactionOrMessage, configOrSigners, includeAccounts) {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction = Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n      const config = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n      if (configOrSigners && typeof configOrSigners === 'object' && 'innerInstructions' in configOrSigners) {\n        config.innerInstructions = configOrSigners.innerInstructions;\n      }\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        if (!signers) break;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.simulatedSignatures.includes(signature) && !this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config = {\n      encoding: 'base64',\n      commitment: this.commitment\n    };\n    if (includeAccounts) {\n      const addresses = (Array.isArray(includeAccounts) ? includeAccounts : message.nonProgramIds()).map(key => key.toBase58());\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses\n      };\n    }\n    if (signers) {\n      config.sigVerify = true;\n    }\n    if (configOrSigners && typeof configOrSigners === 'object' && 'innerInstructions' in configOrSigners) {\n      config.innerInstructions = configOrSigners.innerInstructions;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError({\n        action: 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(transaction, signersOrOptions, options) {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(rawTransaction, options) {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(encodedTransaction, options);\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(encodedTransaction, options) {\n    const config = {\n      encoding: 'base64'\n    };\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment = skipPreflight === true ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n    : options && options.preflightCommitment || this.commitment;\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs = undefined;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError({\n        action: skipPreflight ? 'send' : 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration = (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(this._subscriptionsByHash).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending'\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _setSubscription(hash, nextSubscription) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _onSubscriptionStateChange(clientSubscriptionId, callback) {\n    const hash = this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = this._subscriptionStateChangeCallbacksByHash[hash] ||= new Set();\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(`Error when closing socket connection: ${err.message}`);\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n    await Promise.all(\n    // Don't be tempted to change this to `Object.entries`. We call\n    // `_updateSubscriptions` recursively when processing the state,\n    // so it's important that we look up the *current* version of\n    // each subscription, every time we process a hash.\n    Object.keys(this._subscriptionsByHash).map(async hash => {\n      const subscription = this._subscriptionsByHash[hash];\n      if (subscription === undefined) {\n        // This entry has since been deleted. Skip.\n        return;\n      }\n      switch (subscription.state) {\n        case 'pending':\n        case 'unsubscribed':\n          if (subscription.callbacks.size === 0) {\n            /**\n             * You can end up here when:\n             *\n             * - a subscription has recently unsubscribed\n             *   without having new callbacks added to it\n             *   while the unsubscribe was in flight, or\n             * - when a pending subscription has its\n             *   listeners removed before a request was\n             *   sent to the server.\n             *\n             * Being that nobody is interested in this\n             * subscription any longer, delete it.\n             */\n            delete this._subscriptionsByHash[hash];\n            if (subscription.state === 'unsubscribed') {\n              delete this._subscriptionCallbacksByServerSubscriptionId[subscription.serverSubscriptionId];\n            }\n            await this._updateSubscriptions();\n            return;\n          }\n          await (async () => {\n            const {\n              args,\n              method\n            } = subscription;\n            try {\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'subscribing'\n              });\n              const serverSubscriptionId = await this._rpcWebSocket.call(method, args);\n              this._setSubscription(hash, {\n                ...subscription,\n                serverSubscriptionId,\n                state: 'subscribed'\n              });\n              this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId] = subscription.callbacks;\n              await this._updateSubscriptions();\n            } catch (e) {\n              if (e instanceof Error) {\n                console.error(`${method} error for argument`, args, e.message);\n              }\n              if (!isCurrentConnectionStillActive()) {\n                return;\n              }\n              // TODO: Maybe add an 'errored' state or a retry limit?\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'pending'\n              });\n              await this._updateSubscriptions();\n            }\n          })();\n          break;\n        case 'subscribed':\n          if (subscription.callbacks.size === 0) {\n            // By the time we successfully set up a subscription\n            // with the server, the client stopped caring about it.\n            // Tear it down now.\n            await (async () => {\n              const {\n                serverSubscriptionId,\n                unsubscribeMethod\n              } = subscription;\n              if (this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)) {\n                /**\n                 * Special case.\n                 * If we're dealing with a subscription that has been auto-\n                 * disposed by the RPC, then we can skip the RPC call to\n                 * tear down the subscription here.\n                 *\n                 * NOTE: There is a proposal to eliminate this special case, here:\n                 * https://github.com/solana-labs/solana/issues/18892\n                 */\n                this._subscriptionsAutoDisposedByRpc.delete(serverSubscriptionId);\n              } else {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribing'\n                });\n                try {\n                  await this._rpcWebSocket.call(unsubscribeMethod, [serverSubscriptionId]);\n                } catch (e) {\n                  if (e instanceof Error) {\n                    console.error(`${unsubscribeMethod} error:`, e.message);\n                  }\n                  if (!isCurrentConnectionStillActive()) {\n                    return;\n                  }\n                  // TODO: Maybe add an 'errored' state or a retry limit?\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'subscribed'\n                  });\n                  await this._updateSubscriptions();\n                  return;\n                }\n              }\n              this._setSubscription(hash, {\n                ...subscription,\n                state: 'unsubscribed'\n              });\n              await this._updateSubscriptions();\n            })();\n          }\n          break;\n      }\n    }));\n  }\n\n  /**\n   * @internal\n   */\n  _handleServerNotification(serverSubscriptionId, callbackArgs) {\n    const callbacks = this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n        // I failed to find a way to convince TypeScript that `cb` is of type\n        // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n        // See https://github.com/microsoft/TypeScript/issues/47615\n        // @ts-ignore\n        ...callbackArgs);\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, AccountNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _makeSubscription(subscriptionConfig,\n  /**\n   * When preparing `args` for a call to `_makeSubscription`, be sure\n   * to carefully apply a default `commitment` property, if necessary.\n   *\n   * - If the user supplied a `commitment` use that.\n   * - Otherwise, if the `Connection::commitment` is set, use that.\n   * - Otherwise, set it to the RPC server default: `finalized`.\n   *\n   * This is extremely important to ensure that these two fundamentally\n   * identical subscriptions produce the same identifying hash:\n   *\n   * - A subscription made without specifying a commitment.\n   * - A subscription made where the commitment specified is the same\n   *   as the default applied to the subscription above.\n   *\n   * Example; these two subscriptions must produce the same hash:\n   *\n   * - An `accountSubscribe` subscription for `'PUBKEY'`\n   * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n   *   `'finalized'`.\n   *\n   * See the 'making a subscription with defaulted params omitted' test\n   * in `connection-subscriptions.ts` for more.\n   */\n  args) {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify$1([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending'\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(subscription !== undefined, `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`);\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n\n  /** @deprecated Instead, pass in an {@link AccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  onAccountChange(publicKey, callback, commitmentOrConfig) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([publicKey.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64', config);\n    return this._makeSubscription({\n      callback,\n      method: 'accountSubscribe',\n      unsubscribeMethod: 'accountUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'account change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, ProgramAccountNotificationResult);\n    this._handleServerNotification(subscription, [{\n      accountId: result.value.pubkey,\n      accountInfo: result.value.account\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param config\n   * @return subscription id\n   */\n\n  /** @deprecated Instead, pass in a {@link ProgramAccountSubscriptionConfig} */\n  // eslint-disable-next-line no-dupe-class-members\n\n  // eslint-disable-next-line no-dupe-class-members\n  onProgramAccountChange(programId, callback, commitmentOrConfig, maybeFilters) {\n    const {\n      commitment,\n      config\n    } = extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs([programId.toBase58()], commitment || this._commitment || 'finalized',\n    // Apply connection/server default.\n    'base64' /* encoding */, config ? config : maybeFilters ? {\n      filters: applyDefaultMemcmpEncodingToFilters(maybeFilters)\n    } : undefined /* extra */);\n    return this._makeSubscription({\n      callback,\n      method: 'programSubscribe',\n      unsubscribeMethod: 'programUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'program account change');\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(filter, callback, commitment) {\n    const args = this._buildArgs([typeof filter === 'object' ? {\n      mentions: [filter.toString()]\n    } : filter], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    return this._makeSubscription({\n      callback,\n      method: 'logsSubscribe',\n      unsubscribeMethod: 'logsUnsubscribe'\n    }, args);\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, LogsNotificationResult);\n    this._handleServerNotification(subscription, [result.value, result.context]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotSubscribe',\n      unsubscribeMethod: 'slotUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot change');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SlotUpdateNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'slotsUpdatesSubscribe',\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'slot update');\n  }\n\n  /**\n   * @internal\n   */\n\n  async _unsubscribeClientSubscription(clientSubscriptionId, subscriptionName) {\n    const dispose = this._subscriptionDisposeFunctionsByClientSubscriptionId[clientSubscriptionId];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn('Ignored unsubscribe request because an active subscription with id ' + `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` + 'could not be found.');\n    }\n  }\n  _buildArgs(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(args, override, encoding, extra) {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error('Using Connection with default commitment: `' + this._commitment + '`, but method requires at least `confirmed`');\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, SignatureNotificationResult);\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification(subscription, result.value === 'receivedSignature' ? [{\n      type: 'received'\n    }, result.context] : [{\n      type: 'status',\n      result: result.value\n    }, result.context]);\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(signature, callback, commitment) {\n    const args = this._buildArgs([signature], commitment || this._commitment || 'finalized' // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(signature, callback, options) {\n    const {\n      commitment,\n      ...extra\n    } = {\n      ...options,\n      commitment: options && options.commitment || this._commitment || 'finalized' // Apply connection/server default.\n    };\n    const args = this._buildArgs([signature], commitment, undefined /* encoding */, extra);\n    const clientSubscriptionId = this._makeSubscription({\n      callback: (notification, context) => {\n        callback(notification, context);\n        // Signatures subscriptions are auto-removed by the RPC service\n        // so no need to explicitly send an unsubscribe message.\n        try {\n          this.removeSignatureListener(clientSubscriptionId);\n          // eslint-disable-next-line no-empty\n        } catch (_err) {\n          // Already removed.\n        }\n      },\n      method: 'signatureSubscribe',\n      unsubscribeMethod: 'signatureUnsubscribe'\n    }, args);\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'signature result');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification) {\n    const {\n      result,\n      subscription\n    } = create(notification, RootNotificationResult);\n    this._handleServerNotification(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback) {\n    return this._makeSubscription({\n      callback,\n      method: 'rootSubscribe',\n      unsubscribeMethod: 'rootUnsubscribe'\n    }, [] /* args */);\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(clientSubscriptionId) {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'root change');\n  }\n}\n\n/**\n * Keypair signer interface\n */\n\n/**\n * An account keypair used for signing transactions.\n */\nclass Keypair {\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair) {\n    this._keypair = void 0;\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate() {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(secretKey, options) {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed) {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({\n      publicKey,\n      secretKey\n    });\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey() {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey() {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nconst LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64('recentSlot'), BufferLayout.u8('bumpSeed')])\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), u64(), BufferLayout.seq(publicKey(), BufferLayout.offset(BufferLayout.u32(), -8), 'addresses')])\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  }\n});\nclass AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [layoutType, layout] of Object.entries(LOOKUP_TABLE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == index) {\n        type = layoutType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Invalid Instruction. Should be a LookupTable Instruction');\n    }\n    return type;\n  }\n  static decodeCreateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n    const {\n      recentSlot\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable, instruction.data);\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot)\n    };\n  }\n  static decodeExtendLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(`invalid instruction; found ${instruction.keys.length} keys, expected at least 2`);\n    }\n    const {\n      addresses\n    } = decodeData$1(LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable, instruction.data);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer))\n    };\n  }\n  static decodeCloseLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey\n    };\n  }\n  static decodeFreezeLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n  static decodeDeactivateLookupTable(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error('invalid instruction; programId is not AddressLookupTable Program');\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\nclass AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n  static createLookupTable(params) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync([params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)], this.programId);\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed\n    });\n    const keys = [{\n      pubkey: lookupTableAddress,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.payer,\n      isSigner: true,\n      isWritable: true\n    }, {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false\n    }];\n    return [new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    }), lookupTableAddress];\n  }\n  static freezeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static extendLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes())\n    });\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (params.payer) {\n      keys.push({\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      });\n    }\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static deactivateLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n  static closeLookupTable(params) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: params.lookupTable,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: params.authority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: params.recipient,\n      isSigner: false,\n      isWritable: true\n    }];\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data\n    });\n  }\n}\nAddressLookupTableProgram.programId = new PublicKey('AddressLookupTab1e1111111111111111111111111');\n\n/**\n * Compute Budget Instruction class\n */\nclass ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a ComputeBudgetInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units,\n      additionalFee\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits, instruction.data);\n    return {\n      units,\n      additionalFee\n    };\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      bytes\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame, instruction.data);\n    return {\n      bytes\n    };\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      units\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit, instruction.data);\n    return {\n      units\n    };\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(instruction) {\n    this.checkProgramId(instruction.programId);\n    const {\n      microLamports\n    } = decodeData$1(COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice, instruction.data);\n    return {\n      microLamports\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error('invalid instruction; programId is not ComputeBudgetProgram');\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\n\n/**\n * Request units instruction params\n */\n\n/**\n * Request heap frame instruction params\n */\n\n/**\n * Set compute unit limit instruction params\n */\n\n/**\n * Set compute unit price instruction params\n */\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nconst COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units'), BufferLayout.u32('additionalFee')])\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')])\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), BufferLayout.u32('units')])\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u8('instruction'), u64('microLamports')])\n  }\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nclass ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static requestHeapFrame(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitLimit(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n  static setComputeUnitPrice(params) {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports)\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data\n    });\n  }\n}\nComputeBudgetProgram.programId = new PublicKey('ComputeBudget111111111111111111111111111111');\n\nconst PRIVATE_KEY_BYTES$1 = 64;\nconst PUBLIC_KEY_BYTES$1 = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u8('padding'), BufferLayout.u16('signatureOffset'), BufferLayout.u16('signatureInstructionIndex'), BufferLayout.u16('publicKeyOffset'), BufferLayout.u16('publicKeyInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u16('messageInstructionIndex')]);\nclass Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      instructionIndex\n    } = params;\n    assert(publicKey.length === PUBLIC_KEY_BYTES$1, `Public Key must be ${PUBLIC_KEY_BYTES$1} bytes but received ${publicKey.length} bytes`);\n    assert(signature.length === SIGNATURE_BYTES, `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`);\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n    const index = instructionIndex == null ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n    : instructionIndex;\n    ED25519_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      padding: 0,\n      signatureOffset,\n      signatureInstructionIndex: index,\n      publicKeyOffset,\n      publicKeyInstructionIndex: index,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: index\n    }, instructionData);\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey,\n      message,\n      instructionIndex\n    } = params;\n    assert(privateKey.length === PRIVATE_KEY_BYTES$1, `Private key must be ${PRIVATE_KEY_BYTES$1} bytes but received ${privateKey.length} bytes`);\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nEd25519Program.programId = new PublicKey('Ed25519SigVerify111111111111111111111111111');\n\nconst ecdsaSign = (msgHash, privKey) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery];\n};\nsecp256k1.utils.isValidPrivateKey;\nconst publicKeyCreate = secp256k1.getPublicKey;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct([BufferLayout.u8('numSignatures'), BufferLayout.u16('signatureOffset'), BufferLayout.u8('signatureInstructionIndex'), BufferLayout.u16('ethAddressOffset'), BufferLayout.u8('ethAddressInstructionIndex'), BufferLayout.u16('messageDataOffset'), BufferLayout.u16('messageDataSize'), BufferLayout.u8('messageInstructionIndex'), BufferLayout.blob(20, 'ethAddress'), BufferLayout.blob(64, 'signature'), BufferLayout.u8('recoveryId')]);\nclass Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(publicKey) {\n    assert(publicKey.length === PUBLIC_KEY_BYTES, `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`);\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(params) {\n    const {\n      publicKey,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    } = params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(params) {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0\n    } = params;\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n    assert(ethAddress.length === ETHEREUM_ADDRESS_BYTES, `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`);\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n    const instructionData = Buffer.alloc(SECP256K1_INSTRUCTION_LAYOUT.span + message.length);\n    SECP256K1_INSTRUCTION_LAYOUT.encode({\n      numSignatures,\n      signatureOffset,\n      signatureInstructionIndex: instructionIndex,\n      ethAddressOffset,\n      ethAddressInstructionIndex: instructionIndex,\n      messageDataOffset,\n      messageDataSize: message.length,\n      messageInstructionIndex: instructionIndex,\n      signature: toBuffer(signature),\n      ethAddress: toBuffer(ethAddress),\n      recoveryId\n    }, instructionData);\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(params) {\n    const {\n      privateKey: pkey,\n      message,\n      instructionIndex\n    } = params;\n    assert(pkey.length === PRIVATE_KEY_BYTES, `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`);\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false /* isCompressed */).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\nSecp256k1Program.programId = new PublicKey('KeccakSecp256k11111111111111111111111111111');\n\nvar _Lockup;\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nconst STAKE_CONFIG_ID = new PublicKey('StakeConfig11111111111111111111111111111111');\n\n/**\n * Stake account authority info\n */\nclass Authorized {\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker, withdrawer) {\n    /** stake authority */\n    this.staker = void 0;\n    /** withdraw authority */\n    this.withdrawer = void 0;\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n/**\n * Stake account lockup info\n */\nclass Lockup {\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp, epoch, custodian) {\n    /** Unix timestamp of lockup expiration */\n    this.unixTimestamp = void 0;\n    /** Epoch of lockup expiration */\n    this.epoch = void 0;\n    /** Lockup custodian authority */\n    this.custodian = void 0;\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n}\n_Lockup = Lockup;\nLockup.default = new _Lockup(0, 0, PublicKey.default);\n/**\n * Create stake account transaction params\n */\n/**\n * Create stake account with seed transaction params\n */\n/**\n * Initialize stake instruction params\n */\n/**\n * Delegate stake instruction params\n */\n/**\n * Authorize stake instruction params\n */\n/**\n * Authorize stake instruction params using a derived key\n */\n/**\n * Split stake instruction params\n */\n/**\n * Split with seed transaction params\n */\n/**\n * Withdraw stake instruction params\n */\n/**\n * Deactivate stake instruction params\n */\n/**\n * Merge stake instruction params\n */\n/**\n * Stake Instruction class\n */\nclass StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      authorized,\n      lockup\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Initialize, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(new PublicKey(authorized.staker), new PublicKey(authorized.withdrawer)),\n      lockup: new Lockup(lockup.unixTimestamp, lockup.epoch, new PublicKey(lockup.custodian))\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      stakeAuthorizationType\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType\n      }\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Split, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {\n      lamports\n    } = decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    const o = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData$1(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nconst STAKE_INSTRUCTION_LAYOUTS = Object.freeze({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), authorized(), lockup()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType')])\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('stakeAuthorizationType'), rustString('authoritySeed'), publicKey('authorityOwner')])\n  }\n});\n\n/**\n * Stake authorization type\n */\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nconst StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nclass StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params) {\n    const {\n      stakePubkey,\n      authorized,\n      lockup: maybeLockup\n    } = params;\n    const lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer())\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer())\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccountWithSeed({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      basePubkey: params.basePubkey,\n      seed: params.seed,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.stakePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    const {\n      stakePubkey,\n      authorized,\n      lockup\n    } = params;\n    return transaction.add(this.initialize({\n      stakePubkey,\n      authorized,\n      lockup\n    }));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      votePubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: STAKE_CONFIG_ID,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer())\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorityBase,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {\n      lamports\n    });\n    return new TransactionInstruction({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: splitStakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params,\n  // Compute the cost of allocating the new stake account in lamports\n  rentExemptReserve) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.authorizedPubkey,\n      newAccountPubkey: params.splitStakePubkey,\n      lamports: rentExemptReserve,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params,\n  // If this stake account is new, compute the cost of allocating it in lamports\n  rentExemptReserve) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.allocate({\n      accountPubkey: splitStakePubkey,\n      basePubkey,\n      seed,\n      space: this.space,\n      programId: this.programId\n    }));\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(SystemProgram.transfer({\n        fromPubkey: params.authorizedPubkey,\n        toPubkey: splitStakePubkey,\n        lamports: rentExemptReserve\n      }));\n    }\n    return transaction.add(this.splitInstruction({\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      lamports\n    }));\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params) {\n    const {\n      stakePubkey,\n      sourceStakePubKey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: sourceStakePubKey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      toPubkey,\n      lamports,\n      custodianPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: stakePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params) {\n    const {\n      stakePubkey,\n      authorizedPubkey\n    } = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n    return new Transaction().add({\n      keys: [{\n        pubkey: stakePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: authorizedPubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    });\n  }\n}\nStakeProgram.programId = new PublicKey('Stake11111111111111111111111111111111111111');\n/**\n * Max space of a Stake account\n *\n * This is generated from the solana-stake-program StakeState struct as\n * `StakeStateV2::size_of()`:\n * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n */\nStakeProgram.space = 200;\n\n/**\n * Vote account info\n */\nclass VoteInit {\n  /** [0, 100] */\n\n  constructor(nodePubkey, authorizedVoter, authorizedWithdrawer, commission) {\n    this.nodePubkey = void 0;\n    this.authorizedVoter = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\n\n/**\n * InitializeAccount instruction params\n */\n\n/**\n * Authorize instruction params\n */\n\n/**\n * AuthorizeWithSeed instruction params\n */\n\n/**\n * Withdraw from vote account transaction params\n */\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\n\n/**\n * Vote Instruction class\n */\nclass VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(instruction) {\n    this.checkProgramId(instruction.programId);\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n    let type;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n    const {\n      voteInit\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.InitializeAccount, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(new PublicKey(voteInit.nodePubkey), new PublicKey(voteInit.authorizedVoter), new PublicKey(voteInit.authorizedWithdrawer), voteInit.commission)\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      newAuthorized,\n      voteAuthorizationType\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Authorize, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      }\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType\n      }\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed, instruction.data);\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(currentAuthorityDerivedKeyOwnerPubkey),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType\n      },\n      votePubkey: instruction.keys[0].pubkey\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(instruction) {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {\n      lamports\n    } = decodeData$1(VOTE_INSTRUCTION_LAYOUTS.Withdraw, instruction.data);\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys, expectedLength) {\n    if (keys.length < expectedLength) {\n      throw new Error(`invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`);\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\n\n/** @internal */\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteInit()])\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), publicKey('newAuthorized'), BufferLayout.u32('voteAuthorizationType')])\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')])\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction')])\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct([BufferLayout.u32('instruction'), voteAuthorizeWithSeedArgs()])\n  }\n});\n\n/**\n * VoteAuthorize type\n */\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nconst VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0\n  },\n  Withdrawer: {\n    index: 1\n  }\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nclass VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(params) {\n    const {\n      votePubkey,\n      nodePubkey,\n      voteInit\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(voteInit.authorizedWithdrawer.toBuffer()),\n        commission: voteInit.commission\n      }\n    });\n    const instructionData = {\n      keys: [{\n        pubkey: votePubkey,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_CLOCK_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: nodePubkey,\n        isSigner: true,\n        isWritable: false\n      }],\n      programId: this.programId,\n      data\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params) {\n    const transaction = new Transaction();\n    transaction.add(SystemProgram.createAccount({\n      fromPubkey: params.fromPubkey,\n      newAccountPubkey: params.votePubkey,\n      lamports: params.lamports,\n      space: this.space,\n      programId: this.programId\n    }));\n    return transaction.add(this.initializeAccount({\n      votePubkey: params.votePubkey,\n      nodePubkey: params.voteInit.nodePubkey,\n      voteInit: params.voteInit\n    }));\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params) {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: authorizedPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params) {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(currentAuthorityDerivedKeyOwnerPubkey.toBuffer()),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index\n      }\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: SYSVAR_CLOCK_PUBKEY,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: currentAuthorityDerivedKeyBasePubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      lamports,\n      toPubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {\n      lamports\n    });\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: toPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(params, currentVoteAccountBalance, rentExemptMinimum) {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error('Withdraw will leave vote account with insufficient funds.');\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(params) {\n    const {\n      votePubkey,\n      authorizedWithdrawerPubkey,\n      nodePubkey\n    } = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n    const keys = [{\n      pubkey: votePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: nodePubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: authorizedWithdrawerPubkey,\n      isSigner: true,\n      isWritable: false\n    }];\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data\n    });\n  }\n}\nVoteProgram.programId = new PublicKey('Vote111111111111111111111111111111111111111');\n/**\n * Max space of a Vote account\n *\n * This is generated from the solana-vote-program VoteState struct as\n * `VoteState::size_of()`:\n * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n *\n * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n */\nVoteProgram.space = 3762;\n\nconst VALIDATOR_INFO_KEY = new PublicKey('Va1idator1nfo111111111111111111111111111111');\n\n/**\n * @internal\n */\n\n/**\n * Info used to identity validators.\n */\n\nconst InfoString = type({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  iconUrl: optional(string()),\n  keybaseUsername: optional(string())\n});\n\n/**\n * ValidatorInfo class\n */\nclass ValidatorInfo {\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key, info) {\n    /**\n     * validator public key\n     */\n    this.key = void 0;\n    /**\n     * validator information\n     */\n    this.info = void 0;\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(buffer) {\n    let byteArray = [...buffer];\n    const configKeyCount = decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n    const configKeys = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH));\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({\n        publicKey,\n        isSigner\n      });\n    }\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo = rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo);\n        assert$1(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n    return null;\n  }\n}\n\nconst VOTE_PROGRAM_ID = new PublicKey('Vote111111111111111111111111111111111111111');\n\n/**\n * History of how many credits earned by the end of each epoch\n */\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct([publicKey('nodePubkey'), publicKey('authorizedWithdrawer'), BufferLayout.u8('commission'), BufferLayout.nu64(),\n// votes.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.u32('confirmationCount')]), BufferLayout.offset(BufferLayout.u32(), -8), 'votes'), BufferLayout.u8('rootSlotValid'), BufferLayout.nu64('rootSlot'), BufferLayout.nu64(),\n// authorizedVoters.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), publicKey('authorizedVoter')]), BufferLayout.offset(BufferLayout.u32(), -8), 'authorizedVoters'), BufferLayout.struct([BufferLayout.seq(BufferLayout.struct([publicKey('authorizedPubkey'), BufferLayout.nu64('epochOfLastAuthorizedSwitch'), BufferLayout.nu64('targetEpoch')]), 32, 'buf'), BufferLayout.nu64('idx'), BufferLayout.u8('isEmpty')], 'priorVoters'), BufferLayout.nu64(),\n// epochCredits.length\nBufferLayout.seq(BufferLayout.struct([BufferLayout.nu64('epoch'), BufferLayout.nu64('credits'), BufferLayout.nu64('prevCredits')]), BufferLayout.offset(BufferLayout.u32(), -8), 'epochCredits'), BufferLayout.struct([BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')], 'lastTimestamp')]);\n/**\n * VoteAccount class\n */\nclass VoteAccount {\n  /**\n   * @internal\n   */\n  constructor(args) {\n    this.nodePubkey = void 0;\n    this.authorizedWithdrawer = void 0;\n    this.commission = void 0;\n    this.rootSlot = void 0;\n    this.votes = void 0;\n    this.authorizedVoters = void 0;\n    this.priorVoters = void 0;\n    this.epochCredits = void 0;\n    this.lastTimestamp = void 0;\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(buffer) {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n    let rootSlot = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp\n    });\n  }\n}\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch\n}) {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter)\n  };\n}\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch\n}) {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch\n  };\n}\nfunction getPriorVoters({\n  buf,\n  idx,\n  isEmpty\n}) {\n  if (isEmpty) {\n    return [];\n  }\n  return [...buf.slice(idx + 1).map(parsePriorVoters), ...buf.slice(0, idx).map(parsePriorVoters)];\n}\n\nconst endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/'\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/'\n  }\n};\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nfunction clusterApiUrl(cluster, tls) {\n  const key = tls === false ? 'http' : 'https';\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nasync function sendAndConfirmRawTransaction(connection, rawTransaction, confirmationStrategyOrConfirmOptions, maybeConfirmOptions) {\n  let confirmationStrategy;\n  let options;\n  if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'lastValidBlockHeight')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else if (confirmationStrategyOrConfirmOptions && Object.prototype.hasOwnProperty.call(confirmationStrategyOrConfirmOptions, 'nonceValue')) {\n    confirmationStrategy = confirmationStrategyOrConfirmOptions;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot\n  };\n  const signature = await connection.sendRawTransaction(rawTransaction, sendOptions);\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy ? connection.confirmTransaction(confirmationStrategy, commitment) : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: sendOptions?.skipPreflight ? 'send' : 'simulate',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`\n      });\n    }\n    throw new Error(`Raw transaction ${signature} failed (${JSON.stringify(status)})`);\n  }\n  return signature;\n}\n\n/**\n * There are 1-billion lamports in one SOL\n */\nconst LAMPORTS_PER_SOL = 1000000000;\n\nexport { Account, AddressLookupTableAccount, AddressLookupTableInstruction, AddressLookupTableProgram, Authorized, BLOCKHASH_CACHE_TIMEOUT_MS, BPF_LOADER_DEPRECATED_PROGRAM_ID, BPF_LOADER_PROGRAM_ID, BpfLoader, COMPUTE_BUDGET_INSTRUCTION_LAYOUTS, ComputeBudgetInstruction, ComputeBudgetProgram, Connection, Ed25519Program, Enum, EpochSchedule, FeeCalculatorLayout, Keypair, LAMPORTS_PER_SOL, LOOKUP_TABLE_INSTRUCTION_LAYOUTS, Loader, Lockup, MAX_SEED_LENGTH, Message, MessageAccountKeys, MessageV0, NONCE_ACCOUNT_LENGTH, NonceAccount, PACKET_DATA_SIZE, PUBLIC_KEY_LENGTH, PublicKey, SIGNATURE_LENGTH_IN_BYTES, SOLANA_SCHEMA, STAKE_CONFIG_ID, STAKE_INSTRUCTION_LAYOUTS, SYSTEM_INSTRUCTION_LAYOUTS, SYSVAR_CLOCK_PUBKEY, SYSVAR_EPOCH_SCHEDULE_PUBKEY, SYSVAR_INSTRUCTIONS_PUBKEY, SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY, SYSVAR_REWARDS_PUBKEY, SYSVAR_SLOT_HASHES_PUBKEY, SYSVAR_SLOT_HISTORY_PUBKEY, SYSVAR_STAKE_HISTORY_PUBKEY, Secp256k1Program, SendTransactionError, SolanaJSONRPCError, SolanaJSONRPCErrorCode, StakeAuthorizationLayout, StakeInstruction, StakeProgram, Struct, SystemInstruction, SystemProgram, Transaction, TransactionExpiredBlockheightExceededError, TransactionExpiredNonceInvalidError, TransactionExpiredTimeoutError, TransactionInstruction, TransactionMessage, TransactionStatus, VALIDATOR_INFO_KEY, VERSION_PREFIX_MASK, VOTE_PROGRAM_ID, ValidatorInfo, VersionedMessage, VersionedTransaction, VoteAccount, VoteAuthorizationLayout, VoteInit, VoteInstruction, VoteProgram, clusterApiUrl, sendAndConfirmRawTransaction, sendAndConfirmTransaction };\n//# sourceMappingURL=index.esm.js.map\n","import { useEffect, useState } from \"react\";\r\nimport type { EventEmitter } from \"@solana/wallet-adapter-base\";\r\nimport type {\r\n  Connection,\r\n  SendOptions,\r\n  Transaction,\r\n  TransactionSignature,\r\n  VersionedTransaction,\r\n} from \"@solana/web3.js\";\r\nimport { PublicKey } from \"@solana/web3.js\";\r\n\r\ninterface PhantomWalletEvents {\r\n  connect(...args: unknown[]): unknown;\r\n  disconnect(...args: unknown[]): unknown;\r\n  accountChanged(newPublicKey: PublicKey): unknown;\r\n}\r\n\r\ninterface PhantomWallet extends EventEmitter<PhantomWalletEvents> {\r\n  isPhantom?: boolean;\r\n  publicKey?: { toBytes(): Uint8Array };\r\n  isConnected: boolean;\r\n  signTransaction<T extends Transaction | VersionedTransaction>(\r\n    transaction: T\r\n  ): Promise<T>;\r\n  signAllTransactions<T extends Transaction | VersionedTransaction>(\r\n    transactions: T[]\r\n  ): Promise<T[]>;\r\n  signAndSendTransaction<T extends Transaction | VersionedTransaction>(\r\n    transaction: T,\r\n    options?: SendOptions\r\n  ): Promise<{ signature: TransactionSignature }>;\r\n  signMessage(message: Uint8Array): Promise<{ signature: Uint8Array }>;\r\n  connect(): Promise<void>;\r\n  disconnect(): Promise<void>;\r\n}\r\n\r\ninterface BackpackWallet {\r\n  connection: Connection;\r\n  isBackpack: boolean;\r\n  isConnected: boolean;\r\n  isXnft: boolean | undefined;\r\n  publicKey: PublicKey;\r\n  on: (event: string, callback: () => void) => void;\r\n}\r\n\r\ninterface PhantomWindow extends Window {\r\n  phantom?: {\r\n    solana?: PhantomWallet;\r\n  };\r\n  solana?: PhantomWallet;\r\n}\r\n\r\ninterface BackpackWindow extends Window {\r\n  backpack?: BackpackWallet;\r\n}\r\n\r\nexport default function useSolanaActiveWallet({ publicKey }: { publicKey: PublicKey | null }) {\r\n  const [activePublicKey, setActivePublicKey] = useState<PublicKey | null>(\r\n    publicKey\r\n  );\r\n\r\n  const getPhantomProvider = () => {\r\n    if (window && \"solana\" in window) {\r\n      const provider = window.solana as PhantomWindow;\r\n\r\n      if (provider) {\r\n        return provider as unknown as PhantomWallet;\r\n      }\r\n    }\r\n  };\r\n\r\n  const getBackpackProvider = () => {\r\n    if (window && \"backpack\" in window) {\r\n      const provider = window.backpack as BackpackWindow;\r\n\r\n      if (provider) {\r\n        return provider as unknown as BackpackWallet;\r\n      }\r\n    }\r\n  };\r\n\r\n  const phantomProvider = getPhantomProvider();\r\n  const backpackProvider = getBackpackProvider();\r\n\r\n  useEffect(() => {\r\n    // Set public key on wallet connect\r\n    phantomProvider?.on(\"connect\", (publicKey) => {\r\n      setActivePublicKey(publicKey as PublicKey);\r\n    });\r\n\r\n    // Clear users public key on disconnect\r\n    phantomProvider?.on(\"disconnect\", () => {\r\n      setActivePublicKey(null);\r\n    });\r\n\r\n    phantomProvider?.on(\"accountChanged\", (publicKey: PublicKey) => {\r\n      if (publicKey) {\r\n        // Set new public key and continue as usual\r\n        setActivePublicKey(publicKey);\r\n      } else {\r\n        // Attempt to reconnect to Phantom\r\n        phantomProvider.connect().catch((error: Error) => {\r\n          // Handle connection failure\r\n          console.error(\"Failed to reconnect to Phantom:\", error);\r\n        });\r\n      }\r\n    });\r\n  }, [phantomProvider]);\r\n\r\n  useEffect(() => {\r\n    backpackProvider?.on(\"connect\", () => {\r\n      // Assign public key to a variable on connect\r\n      const newPublicKey = backpackProvider.publicKey;\r\n      // Set new public key\r\n      setActivePublicKey(newPublicKey ? new PublicKey(newPublicKey) : null);\r\n    });\r\n\r\n    backpackProvider?.on(\"disconnect\", () => {\r\n      // Clear users public key on disconnect\r\n      setActivePublicKey(null);\r\n    });\r\n  }, [backpackProvider]);\r\n\r\n  useEffect(() => {\r\n    if (!activePublicKey) {\r\n      setActivePublicKey(publicKey);\r\n    }\r\n  }, [publicKey, activePublicKey]);\r\n\r\n  return { activePublicKey, phantomProvider, backpackProvider };\r\n}\r\n"],"names":["number","n","Number","isSafeInteger","Error","bytes","b","lengths","a","Uint8Array","constructor","name","length","includes","exists","instance","checkFinished","destroyed","finished","crypto","globalThis","undefined","createView","arr","DataView","buffer","byteOffset","byteLength","rotr","word","shift","toBytes","data","str","TextEncoder","encode","utf8ToBytes","abytes","Uint32Array","Hash","clone","this","_cloneInto","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","outputLen","blockLen","create","randomBytes","bytesLength","getRandomValues","Maj","c","HashMD","padOffset","isLE","super","pos","view","len","take","Math","min","set","subarray","process","dataView","roundClean","digestInto","out","output","fill","i","value","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","get","res","slice","destroy","to","U32_MASK64","fromBig","le","u64","split","lst","Ah","Al","toBig","shrSH","_l","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","offset","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_0n","_1n","_2n","isBytes","item","abool","title","hexes","Array","from","_","toString","padStart","bytesToHex","hex","numberToHexUnpadded","num","hexToNumber","asciis","_0","_9","_A","_F","_a","_f","asciiToBase16","char","hexToBytes","hl","al","array","ai","hi","n1","charCodeAt","n2","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","ensureBytes","expectedLength","e","concatBytes","arrays","sum","pad","isPosBig","inRange","max","aInRange","bitLen","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","k","reset","reseed","seed","gen","sl","push","pred","validatorFns","bigint","val","function","boolean","string","stringOrUint8Array","isArray","field","object","Fp","isValid","hash","validateObject","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","String","Object","entries","memoized","fn","WeakMap","arg","args","computed","diff","_3n","_4n","_5n","_8n","mod","result","pow","power","modulo","pow2","x","invert","u","r","m","FpSqrt","P","p1div4","root","eql","sqr","c1","mul","nv","sub","ONE","legendreC","Q","S","Z","Q1div2","neg","g","ZERO","t2","ge","tonelliShanks","FIELD_FIELDS","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","ORDER","redef","BITS","BYTES","sqrtP","f","freeze","MASK","is0","isOdd","lhs","rhs","p","d","FpPow","div","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","nums","lastMultiplied","reduce","acc","inverted","reduceRight","FpInvertBatch","cmov","fromBytes","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","pointPrecomputes","pointWindowSizes","wNAF","bits","constTimeNegate","condition","negate","validateW","W","opts","windows","windowSize","unsafeLadder","elm","double","precomputeWindow","points","base","window","precomputes","BASE","mask","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","wNAFCached","transform","comp","setWindowSize","delete","pippenger","scalars","forEach","buckets","lastBits","floor","j","scalar","resI","sumI","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","twistedEdwards","curveDef","CURVE","ut.validateObject","adjustScalarBytes","domain","uvRatio","mapToCurve","validateOpts","CURVE_ORDER","prehash","cHash","cofactor","modP","Fn","ctx","phflag","aCoordinate","ut.aInRange","assertPoint","other","Point","toAffineMemo","iz","ex","ey","y","ez","z","ax","ay","zz","assertValidMemo","X","Y","et","T","X2","Y2","Z2","Z4","aX2","toAffine","fromAffine","normalizeZ","toInv","msm","_setWindowSize","wnaf","assertValidity","equals","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","multiply","multiplyUnsafe","I","isSmallOrder","isTorsionFree","clearCofactor","fromHex","normed","lastByte","ut.bytesToNumberLE","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","ut.numberToBytesLE","toHex","ut.bytesToHex","modN","modN_LE","key","hashed","head","prefix","pointBytes","hashDomainToScalar","context","msgs","ut.concatBytes","verifyOpts","getPublicKey","sign","options","R","verify","sig","publicKey","SB","error","ExtendedPoint","utils","randomPrivateKey","precompute","ED25519_P","ED25519_SQRT_M1","v3","_10n","_20n","_40n","_80n","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","ed25519_pow_2_252_3","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","module","exports","assert","inherits","ctor","superCtor","super_","TempCtor","prototype","BN","endian","isBN","negative","words","red","_init","Buffer","wordSize","require","parseHex4Bits","index","parseHexByte","lowerBound","parseBase","start","end","move","dest","src","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","total","imuln","_iaddn","copy","_move","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","smallMulTo","self","lo","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","reqLength","allocUnsafe","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","bl2","bh2","b3","bl3","bh3","bl4","bh4","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","qj","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","isEven","yp","xp","im","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","input","prev","next","mod3","one","nOne","lpow","wnd","current","currentLen","mont","require$$0","copyProps","dst","SafeBuffer","encodingOrOffset","alloc","allocUnsafeSlow","TypeError","encoding","buf","SlowBuffer","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","it3","it4","vch","isBuffer","pbegin","pend","b58","it1","it2","repeat","decode","SHA256_K","SHA256_IV","SHA256_W","SHA256","W15","W2","s0","s1","sha256","bs58","ToDictionary","Stream","tokens","endOfStream","read","prepend","token","unshift","pop","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","defineProperty","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","ArrayBuffer","input_stream","code_points","apply","indexOf","cp","fromCharCode","codePointsToString","opt_string","stringToCodePoints","__createBinding","k2","enumerable","__setModuleDefault","__decorate","decorators","target","desc","arguments","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","hasOwnProperty","__importDefault","default","lib","deserializeUnchecked_1","deserializeUnchecked","deserialize_1","deserialize","serialize_1","serialize","BinaryWriter","BorshError","baseDecode","bn_js_1","bs58_1","require$$1","require$$2","textDecoder","baseEncode","INITIAL_LENGTH","message","fieldPath","originalMessage","addToFieldPath","splice","join","maybeResize","concat","writeU8","writeUInt8","writeU16","writeUInt16LE","writeU32","writeUInt32LE","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","RangeError","code","BinaryReader","readU8","readUInt8","readU16","readUInt16LE","readU32","readUInt32LE","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","kind","serializeStruct","obj","borshSerialize","structSchema","fields","idx","values","Writer","deserializeField","reader","Map","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","Layout_1","s16","nu64be","u48be","u40be","u32be","u16be","nu64","u40","u32","u24","u16","u8","greedy","Constant","UTF8","Blob","BitStructure","VariantLayout","Union","UnionLayoutDiscriminator","Structure","Sequence","DoubleBE","Double","Float","NearInt64BE","NearUInt64BE","NearUInt64","IntBE","Int","UInt","OffsetLayout","GreedyCount","ExternalLayout","nameWithProperty","Layout","uint8ArrayToBuffer","checkUint8Array","constant","cstr","blob","unionLayoutDiscriminator","union","seq","struct","f64","f32be","f32","ns64be","s40be","s32be","s24be","s16be","ns64","s48","s40","s32","s24","buffer_1","span","property","isInteger","makeDestinationObject","getSpan","replicate","rv","assign","fromArray","bindConstructorLayout","Class","layout","layout_","boundConstructor_","writable","isCount","elementSpan","rem","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","readIntLE","writeIntLE","readIntBE","writeIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","readInt32BE","writeInt32BE","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","readDoubleLE","writeDoubleLE","readDoubleBE","writeDoubleBE","elementLayout","elo","decodePrefixes","fd","fsp","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","vb","fixBitwiseResult","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","valueMask","wordMask","wordValue","srcBuffer","write","CString","srcb","maxSpan","u48","u24be","s8","s48be","f64be","utf8","converter","node","fs","path","fileURLToPath","sep","fileUriToPath_1","uri","substring","rest","decodeURI","firstSlash","host","test","dirname","accessSync","existsSync","defaults","arrow","env","NODE_BINDINGS_ARROW","compiled","NODE_BINDINGS_COMPILED_DIR","platform","arch","nodePreGyp","versions","modules","version","bindings","try","keys","module_root","getRoot","getFileName","extname","err","requireFunc","__webpack_require__","__non_webpack_require__","tries","resolve","calling_file","fileName","origPST","prepareStackTrace","origSTL","stackTraceLimit","dummy","st","__filename","captureStackTrace","file","dir","cwd","console","warn","toBigIntLE_1","toBigIntLE","reversed","toBigInt","toBigIntBE","toBufferLE_1","toBufferLE","fromBigInt","toBufferBE","StructError","failure","failures","cached","explanation","cause","isObject","isNonArrayObject","print","JSON","stringify","toFailure","branch","refinement","toFailures","iterator","run","coerce","coercer","status","validator","ts","Set","refiner","Struct$1","props","validate","is","tuples","tuple","done","shiftIterator","define","Struct","Element","literal","description","nullable","isNaN","optional","record","Key","Value","Structs","Never","coerced","first","unknown","rnds8","rng","msCrypto","REGEX","uuid","_nodeId","_clockseq","byteToHex","substr","_lastMSecs","_lastNSecs","parse","parseInt","v35","hashfunc","generateUUID","namespace","unescape","encodeURIComponent","stringToBytes","DNS","URL","getOutputLength","inputLength8","safeAdd","lsw","md5cmn","cnt","md5ff","md5gg","md5hh","md5ii","length32","hexTab","md5ToHexEncodedArray","olda","oldb","oldc","oldd","wordsToMd5","length8","bytesToWords","v3$1","ROTL","v5","K","N","M","_i","_i2","_t","_t2","v5$1","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","rnds","v4","generateRequest_1","method","params","id","request","jsonrpc","generator","notificationIdNull","generateRequest","ClientBrowser","callServer","reviver","replacer","callback","isBatch","hasCallback","response","_parseResponse","responseText","isError","isNotError","filter","conversions","createNumberConversion","typeOpts","unsigned","upperBound","moduloVal","moduloBitLength","moduloBound","V","enforceRange","isFinite","clamp","round","evenRound","treatNullAsEmptyString","codePointAt","U","fromCodePoint","RegExp","mixin","getOwnPropertyNames","wrapperSymbol","implSymbol","wrapperForImpl","impl","implForWrapper","wrapper","punycode","mappingTable","PROCESSING_OPTIONS","TRANSITIONAL","NONTRANSITIONAL","normalize","findStatus","regexAstralSymbols","countSymbols","combiningMarksRegex","validateLabel","label","processing_option","toUnicode","search","processing","domain_name","useSTD3","hasError","processed","codePoint","mapChars","labels","validation","tr46","toASCII","verifyDnsLength","specialSchemes","ftp","gopher","http","https","ws","wss","ucs2","at","isASCIIDigit","isASCIIAlpha","isASCIIHex","isSingleDot","isWindowsDriveLetterString","isSpecialScheme","scheme","isSpecial","url","percentEncode","isC0ControlPercentEncode","extraPathPercentEncodeSet","isPathPercentEncode","has","extraUserinfoPercentEncodeSet","isUserinfoPercentEncode","percentEncodeChar","encodeSetPredicate","cStr","utf8PercentEncode","parseIPv4Number","parseHost","isSpecialArg","address","pieceIndex","compress","pointer","numbersSeen","ipv4Piece","swaps","parseIPv6","containsForbiddenHostCodePointExcludingPercent","decoded","parseOpaqueHost","utf8PercentDecode","asciiDomain","containsForbiddenHostCodePoint","ipv4Host","parts","numbers","part","ipv4","counter","parseIPv4","serializeHost","serializeIPv4","seqResult","maxIdx","maxLen","currStart","currLen","findLongestZeroSequence","ignore0","serializeIPv6","shortenPath","isNormalizedWindowsDriveLetter","includesCredentials","username","password","URLStateMachine","encodingOverride","stateOverride","parseError","port","query","fragment","cannotBeABaseURL","trimControlChars","trimTabAndNewline","atFlag","arrFlag","passwordTokenSeenFlag","isASCIIAlphanumeric","encodedCodePoints","fileOtherwiseCodePoints","cp1","cp2","isNormalizedWindowsDriveLetterString","serializeURL","excludeFragment","serializeURLOrigin","parseURL","serializeOrigin","basicURLParse","usm","baseURL","setTheUsername","setThePassword","cannotHaveAUsernamePasswordPort","serializeInteger","integer","URLImpl_1","implementation","constructorArgs","parsedBase","parsedURL","_url","href","origin","protocol","hostname","pathname","Impl","setup","configurable","privateData","interface","expose","Window","Worker","publicApi","Readable","BUFFER","TYPE","blobParts","buffers","element","isView","text","Promise","arrayBuffer","ab","readable","_read","relativeStart","relativeEnd","slicedBuffer","FetchError","systemError","errno","convert","defineProperties","toStringTag","INTERNALS","PassThrough","Body","body","_this","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBlob","disturbed","on","consumeBody","_this4","reject","accum","accumBytes","abort","resTimeout","setTimeout","chunk","clearTimeout","append","getAll","sort","p1","p2","bodyUsed","getBoundary","pipe","extractContentType","then","ct","headers","json","_this2","textConverted","_this3","charset","exec","convertBody","mixIn","proto","global","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","MAP","Headers","init","rawHeaders","raw","headerNames","headerName","pairs","pair","thisArg","getHeaders","_pairs$i","createHeadersIterator","INTERNAL","HeadersIteratorPrototype","setPrototypeOf","getPrototypeOf","_INTERNAL","INTERNALS$1","STATUS_CODES","Response","contentType","statusText","ok","redirected","INTERNALS$2","Url","whatwgUrl","parse_url","format_url","format","urlStr","isRequest","Request","inputBody","signal","isAbortSignal","redirect","follow","agent","AbortError","HMAC","_key","assertHash","iHash","oHash","assertExists","assertBytes","hmac","validateSigVerOpts","lowS","b2n","h2b","ut","DER","Err","_tlv","dataLen","ut.numberToHexUnpadded","lenLen","lengthBytes","_int","toSig","int","tlv","ut.abytes","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","weierstrassPoints","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","mod.Field","_c","_isCompressed","tail","weierstrassEquation","x3","normPrivateKeyToScalar","ut.isBytes","ut.bytesToNumberBE","mod.mod","assertPrjPoint","px","py","pz","privateKey","hasEvenY","U1","U2","t0","t1","t3","t4","t5","sc","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","isWithinCurveOrder","ut.inRange","weierstrass","bits2int","bits2int_modN","compressedLen","uncompressedLen","invN","mod.invert","cat","sqrtError","suffix","numToNByteStr","ut.numberToBytesBE","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","ut.hexToBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","mod.getMinHashLength","fieldLen","minLen","reduced","mod.mapHashToField","isProbPub","ORDER_MASK","ut.bitMask","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","getSharedSecret","privateA","publicB","ut.createHmacDrbg","drbg","signature","sg","_sig","derError","getHash","secp256k1P","secp256k1N","divNearest","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","secp256k1","defHash","createCurve","POW_2_128","c2","isOnCurve","properties","SOLANA_SCHEMA","decodeUnchecked","_PublicKey","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","unique","toBase58","zeroPad","createWithSeed","fromPublicKey","programId","publicKeyBytes","createProgramAddressSync","seeds","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","findProgramAddress","pubkeyData","BufferLayout.blob","rustString","rsl","BufferLayout.struct","BufferLayout.u32","BufferLayout.offset","_decode","_encode","rslShim","chars","FeeCalculatorLayout","BufferLayout.nu64","encodeDecode","bigIntLayout","bigInt","Create","BufferLayout.ns64","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","agentkeepalive","plural","ms","msAbs","isPlural","util","ms$1","match","parseFloat","long","fmtLong","fmtShort","constants","CURRENT_ID","CREATE_ID","INIT_SOCKET","CREATE_HTTPS_CONNECTION","SOCKET_CREATED_TIME","SOCKET_NAME","SOCKET_REQUEST_COUNT","SOCKET_REQUEST_FINISHED_COUNT","OriginalAgent","require$$0$1","Agent","stack","debug","debuglog","INIT_SOCKET$1","defaultTimeoutListenerCount","majorVersion","deprecate","getSocketTimeout","socket","_idleTimeout","keepAlive","freeSocketTimeout","keepAliveTimeout","freeSocketKeepAliveTimeout","socketActiveTTL","createSocketCount","createSocketCountLastCheck","createSocketErrorCount","createSocketErrorCountLastCheck","closeSocketCount","closeSocketCountLastCheck","errorSocketCount","errorSocketCountLastCheck","requestCount","requestCountLastCheck","timeoutSocketCount","timeoutSocketCountLastCheck","calcSocketTimeout","keepSocketAlive","customTimeout","reuseSocket","reusedSocket","agentTimeout","MAX_SAFE_INTEGER","setNoDelay","_agentKey","onFree","_httpMessage","getName","requests","onClose","onTimeout","listenerCount","listeners","req","reqTimeoutListenerCount","enabled","freeSockets","removeSocket","onError","removeListener","emit","onRemove","installListeners","createConnection","oncreate","called","onNewCreate","newSocket","statusChanged","changed","getCurrentStatus","sockets","OriginalHttpsAgent","require$$0$2","HttpAgent","HttpsAgent$1","defaultPort","maxCachedSessions","_sessionCache","list","https_agent","HttpsAgent","BufferLayout.u8","BufferLayout.seq","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","createRpcResult","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","slot","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","epoch","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","ParsedInstructionStruct","program","parsed","PartiallyDecodedInstructionStruct","accounts","logs","executable","owner","lamports","rentEpoch","unitsConsumed","returnData","innerInstructions","instructions","byIdentity","range","firstSlot","lastSlot","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","pubkey","account","ParsedAccountDataResult","space","AccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","active","inactive","memo","blockTime","subscription","ProgramAccountInfoResult","SlotInfoResult","parent","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","AddressTableLookupStruct","accountKey","writableIndexes","readonlyIndexes","ConfirmedTransactionResult","signatures","accountKeys","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","programIdIndex","recentBlockhash","addressTableLookups","AnnotatedAccountKey","signer","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","readonly","ConfirmedTransactionMetaResult","fee","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","blockhash","previousBlockhash","parentSlot","transactions","transaction","meta","rewards","feeCalculator","lamportsPerSignature","lastValidBlockHeight","numTransactions","numSlots","samplePeriodSecs","LogsResult","_Lockup","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","BufferLayout.u16","Lockup","unixTimestamp","custodian","useSolanaActiveWallet","_b","useState","activePublicKey","setActivePublicKey","phantomProvider","provider","solana","getPhantomProvider","backpackProvider","backpack","getBackpackProvider","useEffect","connect","catch","newPublicKey","Initialize","authorized","lockup","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","InitializeAccount","voteInit","UpdateValidatorIdentity","voteAuthorizeWithSeedArgs","website","details","iconUrl","keybaseUsername"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53]}